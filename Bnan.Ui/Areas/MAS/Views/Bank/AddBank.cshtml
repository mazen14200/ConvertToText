@using Bnan.Ui.ViewModels.MAS
@model Bnan.Ui.ViewModels.MAS.BankVM

@inject IViewLocalizer localizer

@{
    ViewData["Page-title"] = localizer["Add Bank Data"];
    ViewData["Page-Hint"] = localizer["Add Bank Hint"];
    ViewData["returnUrl"] = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}
<style>

    .row {
        align-items: center;
    }
</style>
<title>@ViewData["Title"]</title>



<div class="sub-container-form">
    <form class="needs-validation" novalidate asp-area="MAS" asp-controller="Bank" asp-action="AddBank" enctype="multipart/form-data">
        <div class="form-contain">
            @*Bank name arabic*@
            <div class="row mt-2">
                <div class="col-md-1">
                    <label class="form-label" for="BankCode">@localizer["BankCode"]</label>
                </div>
                <div class="col-md-4">
                    <input type="text" class="form-control" asp-for="CrMasSupAccountBankCode" id="BankNameAr" maxlength="100" width="80%" value="@ViewBag.BankCode" readonly />
                </div>
            </div>

            @*Bank name arabic*@
            <div class="row mt-2">
                <div class="col-md-1">
                    <label class="form-label" for="BankNameAr">@localizer["BankNameAr"]</label>
                </div>
                <div class="col-md-4">
                    <input type="text" class="form-control" asp-for="CrMasSupAccountBankArName" id="BankNameAr" maxlength="50" width="80%" oninput="this.value=this.value.replace(/[^\u0600-\u06FF\ufb50-\ufdff\ufe70-\ufeff\s]/g, '')" required />
                    <div style="margin-top:2px">
                        <div style="height: 1.0em">
                             <span asp-validation-for="@Model.CrMasSupAccountBankArName" class="text-danger"></span>
                            @Html.ValidationMessage("ExistAr", null, new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
             </div>


            @*Bank name English*@
            <div class="row mt-2">
                <div class="col-md-1">
                    <label class="form-label" for="LessorNameEn">@localizer["BankNameEn"]</label>
                </div>
                <div class="col-md-4">
                    <input type="text" class="form-control" asp-for="CrMasSupAccountBankEnName" maxlength="50" id="BankNameEn" width="80%" oninput="this.value = this.value.replace(/[^a-zA-Z ]/g, '')">
                    <div style="margin-top:2px">
                        <div style="height: 1.0em">
                            <span asp-validation-for="@Model.CrMasSupAccountBankEnName" class="text-danger"></span>
                            @Html.ValidationMessage("ExistEn", null, new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
             </div>

            @*Bank reasons*@
            <div class="row mt-2">
                <div class="col-md-1">
                    <label class="form-label" for="BankReasons">@localizer["reasons"]</label>
                </div>
                <div class="col-md-7">
                    <input type="text" class="form-control" asp-for="CrMasSupAccountBankReasons" maxlength="100" id="BankReasons" width="80%" />
                    <div style="margin-top:2px">
                        <div style="height: 1.0em">
                            <span asp-validation-for="@Model.CrMasSupAccountBankReasons" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>
            @Html.ValidationMessage("NoCHanged", null, new { @class = "text-danger" })
        </div>
        <div class="mt-3">
            <button class="btn btn-primary" type="submit">@localizer["Save"]</button>
            <a type="button" class="btn btn-danger ms-2" title="@localizer["Back"]" asp-area="MAS" asp-controller="Bank" asp-action="Index">
                @localizer["Back"]
            </a>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        function validateInput(event, inId, InEr, No) {
            event.target.value = event.target.value.replace(/[^0-9]/g, '');

            const inputElement = document.getElementById(inId);
            const errorMessageElement = document.getElementById(InEr);

            const inputValue = inputElement.value;
            const isValid = inputValue.startsWith(No);

            if (!isValid) {
                errorMessageElement.textContent = errorMessageElement.getAttribute('data-val-err');
                inputElement.value = "";
            } else {
                errorMessageElement.textContent = '';
            }


        }
    </script>
}