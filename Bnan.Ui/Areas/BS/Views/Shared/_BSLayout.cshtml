@using Bnan.Core.Extensions;
@using Bnan.Ui.ViewModels.BS;
﻿@using Microsoft.AspNetCore.Builder;
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Localization;
@using Microsoft.AspNetCore.Http.Features;
@using Microsoft.AspNetCore.Mvc.Localization;
@using Microsoft.EntityFrameworkCore;
@using Microsoft.Extensions.Options;
@model BSLayoutVM
@inject UserManager<CrMasUserInformation> userManager
@inject SignInManager<CrMasUserInformation> signinManager
@inject IViewLocalizer localizer
@*@model Bnan.Ui.ViewModels.CAS.LayoutVM*@
@inject IOptions<RequestLocalizationOptions> options
@{
    var user = await userManager.GetUserAsync(User);
    var lessorInfo = await userManager.Users.Include(l => l.CrMasUserInformationLessorNavigation).ThenInclude(l => l.CrMasLessorImage).FirstOrDefaultAsync(x => x.UserName == user.UserName);
    var lessorCompanyContract = await userManager.Users.Include(l => l.CrMasUserInformationLessorNavigation).ThenInclude(l => l.CrMasContractCompanies).FirstOrDefaultAsync(x => x.UserName == user.UserName);
    var userInfo = await userManager.Users
          .Include(l => l.CrMasUserMainValidations)
          .Include(l => l.CrMasUserSubValidations)
          .Include(l => l.CrMasUserInformationLessorNavigation)
          .FirstOrDefaultAsync(l => l.UserName == user.UserName);
    string url = Context.Request.Path;
    string urlhost = Context.Request.Host.Value;
    string full = urlhost + url;
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var returnUrl = ViewData["returnUrl"];
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="شركة كدي لتأجير السيارات ">
    <meta name="author" content="">
    <title>@ViewData["Title"]</title>
    @*     <title>الفروع - الرئيسية</title>
    *@
    <link rel="shortcut icon" href="~/Bnan.png" type="image/x-icon" />
    <!-- Custom styles for this template-->
    <link href="~/BranchSys/css/sb-admin-2.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Cairo+Play:wght@200;300;400;500&family=Cairo:wght@200&display=swap"
          rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Cairo:500,400,700" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+Arabic:wght@300;400&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" integrity="sha384-..." crossorigin="anonymous">
    <link rel="stylesheet" href="~/css/toastr.css" />
    <link rel="stylesheet" href="~/css/icons.min.css" />
    <link href="~/BranchSys/css/style.css" rel="stylesheet">
    @if (requestCulture?.RequestCulture.UICulture.Name == "en-US")
    {
        <link href="~/BranchSys/css/En-style.css" rel="stylesheet">
    }

    <style>
        .noti-icon-badge {
            display: inline-block;
            position: absolute;
            top: 22px;
            right: 6px;
            border-radius: 50%;
            height: 7px;
            width: 7px;
            background-color: #fa5c7c;
        }

        .alert {
            color: #fff;
            background-color: #FF992E;
            flex-direction: row-reverse;
            font-size: .7rem;
            font-weight: 600;
            margin-bottom: 0;
            border: 1px solid #4e73df;
            padding: 0.5rem 0.6rem;
        }

        .dropdown-item-custom {
            display: flex;
            flex-direction: row-reverse;
            padding-bottom: 0.5rem;
            border-bottom: 1px solid #e3e6f0;
            font-size: .7rem;
            flex-direction: row-reverse;
        }

        .ended-Docs-Num {
            color: red;
        }

        .Not-ended-Docs-Num {
            color: #FF992E;
        }
    </style>

</head>

<body class="d-flex flex-column min-vh-100">


    <!-- Start Header Area -->
    <header class="header">
        <div class="navbar-area">
            <!-- Topbar -->
            <nav class="navbar navbar-expand navbar-light topbar mb-2 static-top shadow  justify-content-between" style="height:10vh">
                <!-- Topbar -->
                <!-- Topbar Navbar -->
                <ul class="navbar-nav ">
                    <!-- Nav Item - User Information -->
                    <li class="nav-item dropdown no-arrow">
                        <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button"
                           data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <img class="img-profile rounded-circle" src="@Url.Content(user.CrMasUserInformationPicture?.ToString())" style="margin-right: 12px;height:53px;width:53px">
                            <div style="display: flex; flex-direction: column;">
                                @if (signinManager.IsSignedIn(User))
                                {
                                    @if (requestCulture.RequestCulture.UICulture.Name != "en-US")
                                    {
                                        <span class=" text-dark font-weight-bold" style="font-size: 16px;">
                                            @((await userManager.GetUserAsync(User)).CrMasUserInformationArName)
                                        </span>
                                        <span class="text-dark" style="font-size: 13px;font-weight: 400;">
                                            @((await userManager.GetUserAsync(User)).CrMasUserInformationTasksArName)
                                        </span>
                                    }
                                    else
                                    {
                                        <span class=" text-dark font-weight-bold" style="font-size: 16px;">
                                            @((await userManager.GetUserAsync(User)).CrMasUserInformationEnName)
                                        </span>
                                        <span class="text-dark" style="font-size: 13px;font-weight: 400;">
                                            @((await userManager.GetUserAsync(User)).CrMasUserInformationTasksEnName)
                                        </span>
                                    }

                                }
                            </div>
                        </a>
                        <div class="dropdown-menu dropdown-menu-left shadow animated--grow-in text-right" style="font-size: 16px;font-weight: 600;color: black;" aria-labelledby="userDropdown">
                            <!-- item-->
                            <div class="dropdown-header noti-title dropdown-item">
                                <h6 class="text-overflow m-0">@localizer["Welcome"]</h6>
                            </div>

                            <!-- item-->
                            <a class="dropdown-item notify-item" asp-area="BS" asp-controller="Employees" asp-action="MyAccount">
                                <i class="mdi mdi-account-circle me-1"></i>
                                <span>@localizer["My Account"]</span>
                            </a>
                            <a class="dropdown-item notify-item" data-bs-toggle="modal" data-bs-target="#PasswordModal">
                                <i class="mdi mdi-onepassword me-1"></i>
                                <span>@localizer["ChangePassword"]</span>
                            </a>
                            @if ((user.CrMasUserInformationAuthorizationAdmin == true && user.CrMasUserInformationAuthorizationBranch == true) ||
                            (user.CrMasUserInformationAuthorizationAdmin == true && user.CrMasUserInformationAuthorizationOwner == true) ||
                            (user.CrMasUserInformationAuthorizationBranch == true && user.CrMasUserInformationAuthorizationOwner == true))
                            {
                                <a asp-area="Identity" asp-controller="Account" asp-action="System" class="dropdown-item notify-item">
                                    <i class="mdi mdi-access-point-network me-1"></i>
                                    <span>@localizer["Systems"]</span>
                                </a>
                            }

                            <!-- item-->
                            <a asp-area="Identity" asp-controller="Account" asp-action="Logout" class="dropdown-item notify-item">
                                <i class="mdi mdi-logout me-1"></i>
                                <span>@localizer["logout"]</span>
                            </a>
                        </div>
                    </li>
                    <!-- Nav Item - Messages -->
                    <li class="nav-item dropdown no-arrow mx-1">
                        <a class="nav-link dropdown-toggle" href="#" id="messagesDropdown" role="button"
                           data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <i class="dripicons-message noti-icon" style="font-size: 22px;vertical-align: middle;line-height: 70px;color: #7a7272;"></i>
                            <!-- Counter - Messages -->
                            <span class="noti-icon-badge"></span>
                        </a>
                        <!-- Dropdown - Messages -->
                        <div class="dropdown-list dropdown-menu dropdown-menu-left shadow animated--grow-in"
                             aria-labelledby="messagesDropdown">
                            <h6 class="dropdown-header" style="background-color: #FF992E">
                                مركز الرسائل
                            </h6>
                            <a class="dropdown-item d-flex align-items-center" href="#">
                                <div class="dropdown-list-image mr-3">
                                    <img class="rounded-circle" src="~/BranchSys/img/undraw_profile_1.svg" alt="...">
                                    <div class="status-indicator bg-success"></div>
                                </div>
                                <div class="font-weight-bold">
                                    <div class="text-truncate">
                                        Hi there! I am wondering if you can help me with a
                                        problem I've been having.
                                    </div>
                                    <div class="small text-dark-600">Emily Fowler · 58m</div>
                                </div>
                            </a>
                            <a class="dropdown-item d-flex align-items-center" href="#">
                                <div class="dropdown-list-image mr-3">
                                    <img class="rounded-circle" src="~/BranchSys/img/undraw_profile_2.svg" alt="...">
                                    <div class="status-indicator"></div>
                                </div>
                                <div>
                                    <div class="text-truncate">
                                        I have the photos that you ordered last month, how
                                        would you like them sent to you?
                                    </div>
                                    <div class="small text-dark-600">Jae Chun · 1d</div>
                                </div>
                            </a>
                            <a class="dropdown-item d-flex align-items-center" href="#">
                                <div class="dropdown-list-image mr-3">
                                    <img class="rounded-circle" src="~/BranchSys/img/undraw_profile_3.svg" alt="...">
                                    <div class="status-indicator bg-warning"></div>
                                </div>
                                <div>
                                    <div class="text-truncate">
                                        Last month's report looks great, I am very happy with
                                        the progress so far, keep up the good work!
                                    </div>
                                    <div class="small text-dark-600">Morgan Alvarez · 2d</div>
                                </div>
                            </a>
                            <a class="dropdown-item d-flex align-items-center" href="#">
                                <div class="dropdown-list-image mr-3">
                                    <img class="rounded-circle" src="https://source.unsplash.com/Mv9hjnEUHR4/60x60"
                                         alt="...">
                                    <div class="status-indicator bg-success"></div>
                                </div>
                                <div>
                                    <div class="text-truncate">
                                        Am I a good boy? The reason I ask is because someone
                                        told me that people say this to all dogs, even if they aren't good...
                                    </div>
                                    <div class="small text-dark-600">Chicken the Dog · 2w</div>
                                </div>
                            </a>
                            <a class="dropdown-item text-center small text-dark-600" href="#">Read More Messages</a>
                        </div>
                    </li>
                    <!-- Nav Item - Alerts -->
                    <li class="nav-item dropdown no-arrow mx-1">
                        <a class="nav-link dropdown-toggle" href="#" id="alertsDropdown" role="button"
                           data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <i class="dripicons-bell noti-icon" style="font-size: 22px;vertical-align: middle;line-height: 70px;color: #7a7272;"></i>
                            <!-- Counter - Alerts -->
                            <span class="noti-icon-badge"></span>
                        </a>
                        <!-- Dropdown - Alerts -->
                        <div class="dropdown-list dropdown-menu dropdown-menu-left shadow animated--grow-in" aria-labelledby="alertsDropdown">
                            <div class="row alert">
                                <div class="col-6" style="text-align:end;">
                                    @localizer["Notifications"]
                                </div>

                                <div class="col-4">
                                    @localizer["OnExpiredd"]
                                </div>
                                <div class="col-2">
                                    @localizer["Expired"]
                                </div>
                            </div>
                            <a class="dropdown-item dropdown-item-custom ">
                                <div class="col-md-7 p-0" style="text-align:end;">
                                    @localizer["ContractBranch"]
                                </div>
                                <div class="col-md-3 Not-ended-Docs-Num">
                                    @ViewBag.CompanyDocumentsExpiredBS
                                </div>
                                <div class="col-md-2 ended-Docs-Num">
                                    @ViewBag.CompanyDocumentsAboutExpireBS
                                </div>
                            </a>
                            <a class="dropdown-item dropdown-item-custom ">
                                <div class="col-md-7 p-0" style="text-align:end;">
                                    @localizer["CarsDocuments"]
                                </div>
                                <div class="col-md-3 Not-ended-Docs-Num">
                                    @ViewBag.CompanyDocumentsCarExpiredBS
                                </div>
                                <div class="col-md-2 ended-Docs-Num">
                                    @ViewBag.CompanyDocumentsCarAboutExpireBS
                                </div>
                            </a>
                            <a class="dropdown-item dropdown-item-custom ">
                                <div class="col-md-7 p-0" style="text-align:end;">
                                    @localizer["CarsFixed"]
                                </div>
                                <div class="col-md-3 Not-ended-Docs-Num">
                                    @ViewBag.CompanyMaintainceCarExpiredBS
                                </div>
                                <div class="col-md-2 ended-Docs-Num">
                                    @ViewBag.CompanyMaintainceCarAboutExpireBS
                                </div>
                            </a>
                            <a class="dropdown-item dropdown-item-custom ">
                                <div class="col-md-7 p-0" style="text-align:end;">
                                    @localizer["CarPrice"]
                                </div>

                                <div class="col-md-3 Not-ended-Docs-Num">
                                    @ViewBag.PriceCarExpiredBS
                                </div>
                                <div class="col-md-2 ended-Docs-Num">
                                    @ViewBag.PriceCarAboutExpireBS
                                </div>
                            </a>
                        </div>
                    </li>
                    <!-- Nav Item - Language -->
                    <li class="nav-item dropdown no-arrow mx-2 me-2">
                        @if (requestCulture.RequestCulture.UICulture.Name == "en-US")
                        {
                            <a class="nav-link dropdown-toggle" role="button" asp-area="BS" asp-controller="Home" asp-action="SetLanguage" asp-route-returnUrl="@returnUrl" asp-route-culture="ar-EG">
                                <span class="align-middle" style="color: #8d8282;font-size: 14px;font-weight: 600;">Ar</span>
                            </a>
                        }
                        else
                        {
                            <a class="nav-link dropdown-toggle" role="button" asp-area="BS" asp-controller="Home" asp-action="SetLanguage" asp-route-returnUrl="@returnUrl" asp-route-culture="en-US">
                                <span class="align-middle" style="color: #8d8282;font-size: 14px;font-weight: 600;">En</span>
                            </a>
                        }
                    </li>
                </ul>
                @if (lessorInfo.CrMasUserInformationLessorNavigation.CrMasLessorInformationStatus == Status.Hold)
                {
                    <div class=" d-flex align-items-center on-mobile" style="color:red; font-weight: bold;font-size:14px;margin-top: 3%;">
                        @localizer["CompanyIsHoldInSystems"]
                    </div>
                }
                else if (user.CrMasUserInformationStatus == Status.Hold)
                {
                    <div class=" d-flex align-items-center on-mobile" style="color:red; font-weight:bold;font-size:14px;margin-top: 3%;">
                        @localizer["EmployeeHoldedInBS"]
                    </div>
                }
                else if (lessorCompanyContract?.CrMasUserInformationLessorNavigation?.CrMasContractCompanies.LastOrDefault(x => x.CrMasContractCompanyLessor == lessorInfo.CrMasUserInformationLessor && x.CrMasContractCompanyProcedures == "112")?.CrMasContractCompanyStatus == Status.Renewed)
                {
                    <div style="color:red;font-weight:500" id="dangerMessage">@localizer["ContractNewDanger"]</div>

                }
                else if (lessorCompanyContract?.CrMasUserInformationLessorNavigation?.CrMasContractCompanies.LastOrDefault(x => x.CrMasContractCompanyLessor == lessorInfo.CrMasUserInformationLessor && x.CrMasContractCompanyProcedures == "112")?.CrMasContractCompanyStatus == Status.Expire)
                {
                    <div style="color:red;font-weight:500" id="dangerMessage">@localizer["ContractExpireDanger"]</div>

                }
                else if (lessorCompanyContract?.CrMasUserInformationLessorNavigation?.CrMasContractCompanies.LastOrDefault(x => x.CrMasContractCompanyLessor == lessorInfo.CrMasUserInformationLessor && x.CrMasContractCompanyProcedures == "112")?.CrMasContractCompanyStatus == Status.AboutToExpire)
                {
                    <div style="color:red;font-weight:500" id="dangerMessage">@localizer["ContractAboutExpireDanger"]</div>
                }
                <!-- logo -->
                <div class=" d-flex align-items-center on-mobile" style="color:black;">
                    <div class="pt-sm-0 pt-md-4  pt-lg-4 pt-xl-4 px-3">
                        <h1 class="hide-on-mobile" style="font-size: 1.2rem;font-weight: bold;">
                            @if (signinManager.IsSignedIn(User))
                            {
                                @if (requestCulture.RequestCulture.UICulture.Name != "en-US")
                                {
                                    @Html.Raw(lessorInfo.CrMasUserInformationLessorNavigation?.CrMasLessorInformationArLongName)
                                }
                                else
                                {
                                    @Html.Raw(lessorInfo.CrMasUserInformationLessorNavigation?.CrMasLessorInformationEnLongName)
                                }
                            }
                        </h1>
                        <p class="extra-small-mobile">
                            @if (requestCulture.RequestCulture.UICulture.Name != "en-US")
                            {
                                @Model.CrCasBranchInformations?.Find(x => x.CrCasBranchInformationCode == Model.SelectedBranch)?.CrCasBranchInformationArShortName
                            }
                            else
                            {
                                @Model.CrCasBranchInformations?.Find(x => x.CrCasBranchInformationCode == Model.SelectedBranch)?.CrCasBranchInformationEnShortName
                            }
                            @if (Model.CrCasBranchInformations?.Find(x => x.CrCasBranchInformationCode == Model.SelectedBranch)?.CrCasBranchInformationStatus == Status.Hold)
                            {
                                <span style="color: red;font-size: small;">@localizer["Holded"]</span>
                            }
                        </p>
                    </div>
                    <img class="extra-small-mobile " src="@Url.Content(lessorInfo?.CrMasUserInformationLessorNavigation?.CrMasLessorImage?.CrMasLessorImageLogo)" style="height: 60px;width: 140px;">
                </div>
            </nav>
        </div>
    </header>
    <!------------------------------------------end of Topbar-------------------------------------------------->
    <!-- Expiration Modal -->
    <partial name="_ExpirationModalBS" />
    <!-- Content Row -->
    @RenderBody()
    <!-- buttons  -->
    <!--Modals-->
    <!-- passowrd Modal-->
    <div class="modal fade" id="PasswordModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
         aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered  ">
            <div class="modal-content">
                <form class="needs-validation" novalidate id="formPass">
                    <div class="modal-header account-modal-header">
                        <p class="card-title">تغيير كلمة السر</p>
                        <button class="close" type="button" data-bs-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true"><img src="~/BranchSys/img/cancel.png"></span>
                        </button>
                    </div>
                    <div class="modal-body p-0">
                        <div class="account-container Password-container">
                            <div class="row " style="gap:5px">
                                <div class="col-md-12 ">
                                    <div class="row flex-row-reverse">
                                        <div class="col-md-5 pass-titles">
                                            <label for="current_pass">كلمة السر الحالية</label>
                                        </div>
                                        <div class="col-md-6">
                                            <input type="password" id="currentPass" class="account-select"
                                                   name=" current passowrd" autocomplete="off">
                                            <div class="row requird-field">
                                                <p id="currentPassRequired"></p>
                                                <p id="currentMessage" class="text-danger"></p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="row flex-row-reverse">
                                        <div class="col-md-5 pass-titles">
                                            <label for="New_pass">كلمة السر الجديدة </label>
                                        </div>
                                        <div class="col-md-6">
                                            <input type="password" id="newPass" class=" account-select"
                                                   name="new passowrd" autocomplete="off">
                                            <div class="row requird-field">
                                                <p id="newPassRequired"></p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="row flex-row-reverse">
                                        <div class="col-md-5 pass-titles">
                                            <label for="New_pass_reenter">تأكيد كلمة السر الجديدة </label>
                                        </div>
                                        <div class="col-md-6">
                                            <input type="password" id="confirmPass" class=" account-select"
                                                   name="new passowrd reenter" autocomplete="off">
                                            <div class="row requird-field">
                                                <p <p id="confirmPassRequired"></p>
                                                <p id="confirmPassMessage" class="text-danger"></p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer save-button-row" id="passowrd-save">
                        <a id="submitPassword" class="btn btn-custom">حفظ</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <!-- end of change passowrd Modal-->
    <!-- charts -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.5.1/chart.min.js"></script>
    <!--link to make javascript function operate-->
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js"
            integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
            crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script src="~/BranchSys/js/javascript/carousel_data.js"></script>
    <script src="~/BranchSys/js/javascript/Upload_Img.js"></script>
    <script src="~/BranchSys/js/javascript/charts.js"></script>
    <script src="~/js/toastr.js"></script>
    @await RenderSectionAsync("Scripts", required: false)
    @await Component.InvokeAsync("NToastNotify")
    <script>
        // @*Expireation pop up modal*@
        //     $(document).ready(function () {
        //         // Set an initial timeout of 60 seconds (in milliseconds)
        //         var exitUser = "@user.CrMasUserInformationExitTimer";
        //         let timeout = parseInt(exitUser) * 60 * 1000;
        //         let timer;
        //         let modalTimer;
        //         // Function to start the countdown within the modal
        //         function startModalCountdown() {
        //             modalTimer = setInterval(updateModalCountdown, 1000);
        //             return modalTimer;
        //         }

        //         // Function to update the countdown display within the modal
        //         function updateModalCountdown() {
        //             let modalCountdownElem = $('#countdown');
        //             let modalTimeLeft = parseInt(modalCountdownElem.text());

        //             if (modalTimeLeft > 1) {
        //                 modalCountdownElem.text(modalTimeLeft - 1);
        //                 console.log('Modal Countdown:', modalTimeLeft - 1); // Log countdown value to console
        //             } else {
        //                 clearInterval(timer);
        //                 $('#popup').modal("hide");
        //                 logout(); // Optionally log out the user when the modal countdown finishes
        //             }
        //         }

        //         // Function to start the countdown for user inactivity
        //         function startCountdown() {
        //             let timeLeft = timeout / 1000; // Convert milliseconds to seconds
        //             console.log('ExitUser Countdown:', timeLeft); // Log initial countdown value to console

        //             let countdownInterval = setInterval(function () {
        //                 timeLeft -= 1;
        //                 console.log('ExitUser Countdown:', timeLeft); // Log updated countdown value to console
        //                 if (timeLeft <= 0) {
        //                     clearInterval(countdownInterval);
        //                     $('#popup').modal("show");
        //                     startModalCountdown(); // Start the countdown within the modal
        //                 }
        //             }, timeout); // Update countdown every second
        //         }

        //         // Function to clear the countdown timers
        //         function clearCountdown() {
        //             clearTimeout(timer);
        //             clearInterval(modalTimer);
        //         }

        //         // Function to logout the user
        //         function logout() {
        //             $.ajax({
        //                 type: "GET",
        //                 url: "@Url.Action("Logout", "Account", new { Area = "Identity" })",
        //                 success: function (response) {
        //                     window.location.href = "@Url.Action("Index", "Account", new { Area = "Identity" })";
        //                 },
        //             });
        //         }

        //         // Function to update last action date in the database
        //         function updateLastAction() {
        //             $.ajax({
        //                 type: "POST",
        //                 url: "@Url.Action("UpdateLastActionDate", "Account", new { Area = "Identity" })",
        //                 success: function (response) {
        //                     // Handle success
        //                     console.log(response)
        //                 },
        //                 error: function (xhr, status, error) {
        //                     // Handle error
        //                 }
        //             });
        //         }

        //         // Add event listeners to detect user activity
        //         $(document).on('click keydown', function () {
        //             clearCountdown(); // Clear existing timers
        //             startCountdown(); // Start new countdown
        //             updateLastAction(); // Update last action date in the database
        //             console.log("User activity detected");
        //         });

        //         // Add event listener to continue button
        //         $('#continueBtn').click(function () {
        //             $('#countdown').text(exitUser); // Reset the modal countdown
        //             $('#popup').modal("hide");
        //             clearCountdown(); // Clear existing timers
        //             startCountdown(); // Start new countdown
        //             updateLastAction(); // Update last action date in the database
        //             console.log("Continue button clicked");
        //         });

        //         // Add event listener to logout button
        //         $('#logoutBtn').click(function () {
        //             clearTimeout(timer); // Clear the countdown timer
        //             logout();
        //             console.log("Logout button clicked");
        //         });
        //     });




        $(document).ready(function () {
            // Set an initial timeout of 60 seconds (in milliseconds)
            var exitUser = "@user.CrMasUserInformationExitTimer";
            let timeout = parseInt(exitUser) * 60 * 1000;
            let timer;

            // Function to start the countdown
            function startCountdown() {
                timer = setInterval(updateCountdown, 1000);
            }
            function clearCountdown() {
                clearInterval(timer);
            }

            // Function to update the countdown display
            function updateCountdown() {
                let countdownElem = $('#countdown');
                let timeLeft = parseInt(countdownElem.text());

                if (timeLeft > 1) {
                    countdownElem.text(timeLeft - 1);
                } else {
                    clearInterval(timer);
                    logout();
                }
            }

            // Function to logout the user
            function logout() {
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("Logout", "Account", new { Area = "Identity" })",
                    success: function (response) {
                        window.location.href = "@Url.Action("Index", "Account", new { Area = "Identity" })";
                    },
                })
            }

            // Add event listener to detect no activity
            let idleTimeout = null;

            $(document).on('click', function () {
                $('#countdown').text("60");
                clearCountdown();
                clearTimeout(idleTimeout);
                $('#popup').modal("hide");
                updateLastAction();
                idleTimeout = setTimeout(function () {
                    if ($('#popup').is(':visible')) {
                        return; // Popup already displayed, so ignore this event
                    }

                    $('#popup').modal("show");
                    startCountdown();
                }, timeout);
            });
            $(document).on('mousemove', function () {
                // $('#countdown').text("60");
                // clearCountdown();
                clearTimeout(idleTimeout);
                // $('#popup').modal("hide");
                idleTimeout = setTimeout(function () {
                    if ($('#popup').is(':visible')) {
                        return; // Popup already displayed, so ignore this event
                    }
                    $('#popup').modal("show");
                    startCountdown();
                }, timeout);
            });

            // Add event listener to continue button
            $('#continueBtn').click(function () {
                $('#countdown').text("60");
                clearCountdown();
                clearTimeout(idleTimeout);
                $('#popup').modal("hide");
            });

            // Add event listener to logout button
            $('#logoutBtn').click(function () {
                clearTimeout(idleTimeout);
                logout();
            });
            // Function to update last action date in the database
            function updateLastAction() {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("UpdateLastActionDate", "Account", new { Area = "Identity" })",
                    success: function (response) {
                        // Handle success
                        console.log(response)
                    },
                    error: function (xhr, status, error) {
                        // Handle error
                    }
                });
            }

        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var inputFields = document.querySelectorAll('input');

            inputFields.forEach(function (input) {
                input.setAttribute('autocomplete', 'off');
            });
        });
    </script>
    <script>
        // $(document).ready(function () {
        //     // Attach a change event handler to the select element
        //     $('#submit').click(function () {
        //         // Get the selected value
        //         var salesPoint = $(this).val();
        //         var branch = $("#branch").val();
        //         //Store SalesPoint Code in Hidden Input
        //         $.ajax({
        //             type: "GET",
        //             data: {
        //                 Current: branch,
        //                 New: salesPoint,
        //                 Confirm:
        //             },
        //             url: "@Url.Action("Employees", "Custody", new { Area = "BS" })",
        //             success: function (response) {
        //                 $("#CustodyData").html(response);
        //             },
        //         });
        //     });
        // });
    </script>


    <script>
        const currentPassInput = document.getElementById('currentPass');
        const newPassInput = document.getElementById('newPass');
        const confirmPassInput = document.getElementById('confirmPass');

        // Add event listeners to clear error messages when input is detected
        currentPassInput.addEventListener('input', () => {
            currentPassMessage.textContent = ''; // Clear the error message
            $('#currentPassRequired').hide();
        });
        confirmPassInput.addEventListener('input', () => {
            confirmPassMessage.textContent = ''; // Clear the error message
            $('#newPassRequired').hide();
        });
        newPassInput.addEventListener('input', () => {
            confirmPassMessage.textContent = ''; // Clear the error message
            $('#confirmPassRequired').hide();
        });
        $(document).ready(function () {
            $('#submitPassword').click(function () {
                // Get the values from the input fields
                var currentPassword = $("#currentPass").val().trim();
                var newPassword = $("#newPass").val().trim();
                var confirmPassword = $("#confirmPass").val().trim();

                // Clear any previous error messages
                $('#currentMessage, #confirmPassMessage').text('');

                // Check if any input field is empty
                if (currentPassword === '') {
                    $('#currentPassRequired').text('@localizer["requiredFiled"]');
                    return;
                }
                if (newPassword === '') {
                    $('#newPassRequired').text('@localizer["requiredFiled"]');
                    return;
                }
                if (confirmPassword === '') {
                    $('#confirmPassRequired').text('@localizer["requiredFiled"]');
                    return;
                }

                // Check if the new password and confirm password match
                if (newPassword !== confirmPassword) {
                    $('#confirmPassMessage').text('@localizer["WrongConfirmPassword"]');
                    return;
                }

                // Perform AJAX request if all validations pass
                $.ajax({
                    type: "POST",
                    data: {
                        Current: currentPassword,
                        New: newPassword,
                    },
                    url: "@Url.Action("ChangePassword", "Employees", new { Area = "BS" })",
                    success: function (response) {
                        var result = response;
                        if (result === "wrong") {
                            $('#currentMessage').text('@localizer["WrongCurrentPassword"]');
                        } else if (result === "false") {
                            $('#PasswordModal').modal('hide');
                            window.location.href = "/BS/Employees/ErrorMessageForChangePassword";
                        } else {
                            $('#PasswordModal').modal('hide');
                            window.location.href = "/BS/Employees/SuccesssMessageForChangePassword";
                        }
                    },
                });
            });
        });
    </script>
</body>
</html>