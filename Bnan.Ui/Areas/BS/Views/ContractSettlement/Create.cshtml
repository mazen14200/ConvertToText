@using Bnan.Ui.ViewModels.BS;
@using Microsoft.AspNetCore.Identity
@model BSLayoutVM
@inject IViewLocalizer localizer
@using Microsoft.EntityFrameworkCore;
@inject UserManager<CrMasUserInformation> userManager
@inject SignInManager<CrMasUserInformation> signinManager
@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    ViewData["returnUrl"] = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
    var user = await userManager.GetUserAsync(User);
    var userInfo = await userManager.Users
      .Include(l => l.CrMasUserMainValidations)
      .Include(l => l.CrMasUserSubValidations)
      .Include(x => x.CrMasUserBranchValidities)
      .Include(x => x.CrMasUserContractValidity)
      .Include(l => l.CrMasUserInformationLessorNavigation)
      .FirstOrDefaultAsync(l => l.UserName == user.UserName);
    var lessorInfo = await userManager.Users.Include(l => l.CrMasUserInformationLessorNavigation).ThenInclude(l => l.CrMasLessorImage).FirstOrDefaultAsync(x => x.UserName == user.UserName);
}
<link href="~/BranchSys/Pages/css/style.css" rel="styleSheet">
<link href="~/BranchSys/css/loader.css" rel="styleSheet">
@if (requestCulture?.RequestCulture.UICulture.Name != "ar-EG")
{
    <link href="~/BranchSys/Pages/css/English_style.css" rel="styleSheet">
}
<style>
    *:disabled {
        background-color: white !important;
    }
</style>
<!-- MultiStep Form -->
<div class="container-fluid" id="grad1">
    <section class="section-mainCard">
        <div class="row justify-content-center w-100 h-100">
            <div class="col-11 col-sm-10 col-md-11 col-lg-11 col-xl-10 text-center p-0 ">
                <div class="card main-card ">
                    <div class="row pt-2">
                        <a asp-action="Index" asp-area="BS" asp-controller="ContractSettlement" style="width: fit-content;">
                            <img src="~/BranchSys/Pages/img/cancel.png" alt="cancle_icon" class="cancle-icon">
                        </a>
                    </div>

                    <div class="row flex-row-reverse">
                        <div class="col justify-content-center d-flex title-row">
                            <span class="card-title">
                                @localizer["ContractSettlement"]
                            </span>
                        </div>

                    </div>
                    <div class="row justify-content-center content-row h-100">

                        <div class="col-md-11 mx-0 h-100">

                            <form id="SettlementForm" asp-area="BS" asp-controller="ContractSettlement" asp-action="Create" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
                                <input hidden asp-for="ContractSettlement.CrCasRenterContractBasicNo" />
                                <input hidden asp-for="SelectedBranch" />
                                <input hidden asp-for="ContractSettlement.ActualDaysNo" />
                                <input hidden asp-for="ContractSettlement.AdditionalKm" />
                                <input hidden asp-for="ContractSettlement.TaxValue" />
                                <input hidden asp-for="ContractSettlement.DiscountValue" />
                                <input hidden asp-for="ContractSettlement.ContractValueAfterDiscount" />
                                <input hidden asp-for="ContractSettlement.TotalContract" />
                                <input hidden asp-for="ContractSettlement.ContractValue" />
                                <input hidden asp-for="ContractSettlement.MaxHours" />
                                <input hidden asp-for="ContractSettlement.MaxMinutes" />
                                <input hidden asp-for="ContractSettlement.ExtraHoursValue" />
                                <input hidden asp-for="ContractSettlement.ChoicesValueTotal" />
                                <input hidden asp-for="ContractSettlement.PrivateDriverValueTotal" />
                                <input hidden asp-for="ContractSettlement.PreviousBalance" />
                                <input hidden asp-for="ContractSettlement.AmountRequired" />
                                <input hidden asp-for="ContractSettlement.AdvantagesValueTotal" />
                                <input hidden id="language" name="language" />
                                <div class=" ">
                                    <!-- progressbar -->
                                    <ul id="progressbar">
                                        <li class="active" id="Rental_terms">@localizer["TermsRented"]</li>
                                        <li id="Expenses">@localizer["Expenses"]</li>
                                        <li id="compensation">@localizer["Compensations"]</li>
                                        <li id="check">@localizer["VirtualInspection"]</li>
                                        <li id="payment">@localizer["Payment"]</li>
                                    </ul>
                                </div>
                                <fieldset id="firstFieldset">
                                    <div class="form-card SettlementCard1 ">
                                        <a href="#" target="_blank" class="pdf-anchor"><img src="~/BranchSys/Pages/img/pdf.png" alt="pdf for contract details" class="pdf_img"></a>
                                        <div class="row data-row-Settl ">
                                            <div class="col-xl-4 data-col-Settl contract-Settl-row ">
                                                <div class="col-auto ">
                                                    <P>@localizer["ContractNo"]</P>
                                                </div>
                                                <div class="col-auto personal-data ">
                                                    <P>@Model.ContractSettlement.CrCasRenterContractBasicNo</P>
                                                </div>
                                                <div class="col-md-8 col-lg-10 seacrh-icon-col ">
                                                    <div>
                                                        <img src="~/BranchSys/Pages/img/seacrh-icon.png" alt="seacrh-icon Image" id="hover-image-Settlement">
                                                    </div>
                                                    <div class="dropdown-content" id="dropdown-content-Settlement">
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p>: @localizer["Renterr"] </p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                @if (requestCulture?.RequestCulture.UICulture.Name != "ar-EG")
                                                                {
                                                                    <p>@Model.ContractSettlement.CrCasRenterContractBasic5?.CrCasRenterLessorNavigation.CrMasRenterInformationEnName</p>
                                                                }
                                                                else
                                                                {
                                                                    <p>@Model.ContractSettlement.CrCasRenterContractBasic5?.CrCasRenterLessorNavigation.CrMasRenterInformationArName</p>
                                                                }
                                                            </div>

                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p>: @localizer["Car"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                @if (requestCulture?.RequestCulture.UICulture.Name != "ar-EG")
                                                                {
                                                                    <p>@Model.ContractSettlement.CrCasRenterContractBasicCarSerailNoNavigation?.CrCasCarInformationConcatenateEnName</p>
                                                                }
                                                                else
                                                                {
                                                                    <p>@Model.ContractSettlement.CrCasRenterContractBasicCarSerailNoNavigation?.CrCasCarInformationConcatenateArName</p>
                                                                }
                                                            </div>

                                                        </div>

                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p>: @localizer["StartContract"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p>@Model.ContractSettlement.CrCasRenterContractBasicExpectedStartDate?.ToString("yyyy/MM/dd HH:mm", CultureInfo.InvariantCulture)</p>
                                                            </div>

                                                        </div>

                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p>: @localizer["ExpectedEndContract"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p>@Model.ContractSettlement.CrCasRenterContractBasicExpectedEndDate?.ToString("yyyy/MM/dd HH:mm", CultureInfo.InvariantCulture)</p>
                                                            </div>

                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p> : @localizer["ExpectedDaysNo"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p>@Model.ContractSettlement.CrCasRenterContractBasicExpectedRentalDays</p>
                                                            </div>

                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p> : @localizer["EndAuth"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p>@Model.ContractSettlement.AuthEndDate?.ToString("yyyy/MM/dd", CultureInfo.InvariantCulture)</p>
                                                            </div>
                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p> : @localizer["FreeAdditionalHours"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p>
                                                                    @if (Model.ContractSettlement.CrCasRenterContractBasicUserFreeHours > 0)
                                                                    {
                                                                        <span>@Model.ContractSettlement.CrCasRenterContractBasicUserFreeHours + </span>
                                                                    }
                                                                    @Model.ContractSettlement.CrCasRenterContractBasicFreeHours
                                                                </p>
                                                            </div>
                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p> : @localizer["HourMax"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p>@Model.ContractSettlement.CrCasRenterContractBasicHourMax</p>
                                                            </div>
                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p> : @localizer["DailyFreeKm"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p>
                                                                    @if (Model.ContractSettlement.CrCasRenterContractBasicDailyFreeKmUser > 0)
                                                                    {
                                                                        <span>@Model.ContractSettlement.CrCasRenterContractBasicDailyFreeKmUser + </span>
                                                                    }
                                                                    @Model.ContractSettlement.CrCasRenterContractBasicDailyFreeKm
                                                                </p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=" col-md-auto col-lg-6 data-col-Settl flex-wrap Settlement-date ">
                                                <div class="col-auto ">
                                                    <P>@localizer["SettlementDate"]</P>
                                                </div>
                                                <div class="col-auto personal-data ">
                                                    <P>@DateTime.Now.ToString("yyyy/MM/dd", CultureInfo.InvariantCulture)</P>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row data-row-Settl">
                                            <div class=" col-xl-8 data-col-Settl flex-wrap ">
                                                <div class="col-auto ">
                                                    <P>@localizer["ContractValue"]</P>
                                                </div>
                                                <div class="col-auto personal-data ">
                                                    <P>@Model.ContractSettlement.CrCasRenterContractBasicExpectedTotal?.ToString("N2", CultureInfo.InvariantCulture)</P>
                                                </div>
                                                <div class="col-md-6 col-lg-5 col-xl-5 seacrh-icon-col">
                                                    <div>
                                                        <img src="~/BranchSys/Pages/img/seacrh-icon.png" alt="seacrh-icon Image" id="contract-value-Settlement2">
                                                    </div>
                                                    <div class="dropdown-content" id="dropdown-content-Settlement2">
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p>: @localizer["RentalValue"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p>@Model.ContractSettlement.CrCasRenterContractBasicExpectedRentValue?.ToString("N2", CultureInfo.InvariantCulture)</p>
                                                            </div>

                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p>: @localizer["DelegationValue"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p>@Model.ContractSettlement.CrCasRenterContractBasicAuthorizationValue?.ToString("N2", CultureInfo.InvariantCulture)</p>
                                                            </div>
                                                        </div>

                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p>: @localizer["Features"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p>@Model.ContractSettlement.AdvantagesValueTotal</p>
                                                            </div>
                                                        </div>

                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p>: @localizer["AdditionalDriver"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p>@Model.ContractSettlement.CrCasRenterContractBasicAdditionalDriverValue?.ToString("N2", CultureInfo.InvariantCulture)</p>
                                                            </div>

                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p>: @localizer["PrivateDriver"] </p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p>@Model.ContractSettlement.CrCasRenterContractBasicExpectedPrivateDriverValue?.ToString("N2", CultureInfo.InvariantCulture)</p>
                                                            </div>

                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p>: @localizer["Choices"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p>@Model.ContractSettlement.CrCasRenterContractBasicExpectedOptionsValue?.ToString("N2", CultureInfo.InvariantCulture)</p>
                                                            </div>

                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p>: @localizer["Additionals"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p> @Model.ContractSettlement.CrCasRenterContractBasicAdditionalValue?.ToString("N2", CultureInfo.InvariantCulture) </p>
                                                            </div>
                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p>: @localizer["DiscountValue"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p> @Model.ContractSettlement.CrCasRenterContractBasicExpectedDiscountValue?.ToString("N2", CultureInfo.InvariantCulture) </p>
                                                            </div>
                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p>: @localizer["TaxValue"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p> @Model.ContractSettlement.CrCasRenterContractBasicExpectedTaxValue?.ToString("N2", CultureInfo.InvariantCulture) </p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row data-row-Settl g-3">
                                            <div class="col-md-auto col-lg-4  data-col-Settl flex-wrap">
                                                <div class="col-auto">
                                                    <label for="contract_real_endTime">
                                                        @localizer["EndOfSettlement"]
                                                    </label>
                                                </div>
                                                <div class="col-md-6">
                                                    <input type="date" id="contract_real_endTime" class="form-control inputs" asp-for="ContractSettlement.ActualEndContractDate" aria-describedby="inputGroupPrepend" required>
                                                    <div class="row requird-field-row-last">
                                                        <span class="requird-field" id="requird_field_SettlementMechanism" asp-validation-for="@Model.ContractSettlement.ActualEndContractDate"></span>
                                                    </div>
                                                </div>

                                            </div>
                                            <div class="col-md-auto col-lg-4  data-col-Settl flex-wrap">
                                                <div class="col-auto">
                                                    <p>@localizer["ActualNumberOfDays"]</p>
                                                </div>
                                                <div class="col-auto personal-data">
                                                    <P id="daysNo">0</P>
                                                </div>

                                            </div>
                                        </div>
                                        <div class="row data-row-Settl">

                                            <div class="col-md-4 data-col-Settl ">
                                                <div class="col-auto">
                                                    <p>@localizer["AddHours"]</p>
                                                </div>
                                                <div class="col-auto personal-data">
                                                    <span id="diffHours">00</span>:<span id="diffMinutes">00</span>
                                                </div>
                                            </div>
                                            <div class="col-md-6 col-lg-4  data-col-Settl flex-wrap" id="mechanismSettlement" style="display:none">
                                                <div class="col-auto">
                                                    <label for="Settlement-mechanism">
                                                        @localizer["SettlementMechanism"]
                                                    </label>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="offset">
                                                        <select class="form-select form-select-settel" id="Settlement-mechanism" asp-for="ContractSettlement.SettlementMechanism">
                                                            <option selected disabled>
                                                            </option>
                                                            <option value="0">@localizer["Without"]</option>
                                                            <option value="1">@localizer["Day"]</option>
                                                            <option value="2">@localizer["DayHalf"]</option>
                                                            <option value="3">@localizer["DayQuarter"]</option>
                                                        </select>

                                                        <div class="row requird-field-row-last">
                                                            <span class="requird-field" id="requird_field_SettlementMechanism" asp-validation-for="@Model.ContractSettlement.SettlementMechanism"></span>
                                                        </div>
                                                    </div>

                                                </div>

                                            </div>
                                        </div>

                                        <div class="row data-row-Settl">
                                            <div class="col-md-auto col-lg-4  data-col-Settl flex-wrap">
                                                <div class="col-auto">
                                                    <p>@localizer["ReceivingBranch"] </p>
                                                </div>
                                                <div class="col-auto personal-data">
                                                    @if (requestCulture?.RequestCulture.UICulture.Name != "ar-EG")
                                                    {
                                                        <P>@Model.ContractSettlement?.CrCasRenterContractBasic1?.CrCasBranchInformationEnShortName</P>
                                                    }
                                                    else
                                                    {
                                                        <P>@Model.ContractSettlement?.CrCasRenterContractBasic1?.CrCasBranchInformationArShortName</P>
                                                    }
                                                </div>

                                            </div>
                                            <div class="col-md-4 data-col-Settl ">
                                                <div class="col-auto">
                                                    <p>@localizer["DeliveryBranch"]</p>
                                                </div>
                                                <div class="col-auto personal-data">
                                                    @if (requestCulture?.RequestCulture.UICulture.Name != "ar-EG")
                                                    {
                                                        <P>@Model.CrCasBranchInformation?.CrCasBranchInformationEnShortName</P>
                                                    }
                                                    else
                                                    {
                                                        <P>@Model.CrCasBranchInformation?.CrCasBranchInformationArShortName</P>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row data-row-Settl ">
                                            <div class="col-md-auto col-lg-4  data-col-Settl flex-wrap">

                                                <div class="col-auto ">
                                                    <label class="form-check-label" for="expenses">@localizer["Expense"]</label>
                                                    <input class="form-check-input Settlement-input-checkbox" type="checkbox" value="checked" id="expenses-check" name="checked-expenses">

                                                </div>

                                            </div>
                                            <div class="col-md-4 data-col-Settl mb-4 ">

                                                <div class="col-auto ">
                                                    <label class="form-check-label" for="compensation-check">@localizer["Compensation"]</label>
                                                    <input class="form-check-input Settlement-input-checkbox" type="checkbox" value="checked" id="compensation-check" name="checked-compensation">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row button-row">
                                        <div class="button-card">
                                            <img src="~/BranchSys/Pages/img/Group.png" alt="Button Image"
                                                 class="next action-button"
                                                 style="vertical-align: middle; ">
                                            <input type="button" name="next" class="next action-button"
                                                   value="@localizer["Next"]" />
                                        </div>
                                        <div class="button-card">
                                        </div>
                                    </div>


                                </fieldset>
                                <fieldset id="SecondFieldset">
                                    <div class="form-card form-card1">
                                        <div class="row flex-row-reverse">
                                            <div class="row">
                                                <div class="expensesDiv align-items-baseline ">
                                                    <div class="col-auto">
                                                        <label id="expensesValue" for="expensesValue-input">@localizer["ExpenseValue"]</label>
                                                    </div>
                                                    <div class="col-auto">
                                                        <input type="tel" class="form-control form-control1" style="width: 130px;" id="expensesValue-input" asp-for="ContractSettlement.ExpensesValue" oninput="handleAmountPayed(this)" aria-describedby="inputGroupPrepend" autocomplete="off" required>
                                                        <div class="row requird-field-row-last">
                                                            <span class="requird-field" id="requird_field_ExpensesValue" asp-validation-for="@Model.ContractSettlement.ExpensesValue"></span>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                        <div class="row flex-row-reverse expensesRow g-5">
                                            <div class="col-lg-5">

                                                <div class="row expensesDiv expensesDiv-textarea ">
                                                    <div class="col-auto">
                                                        <label id="Expense-statement" for="Expense-statement-input">@localizer["ExpenseStatement"]</label>
                                                    </div>
                                                    <div class="col-lg-9" style="height: 100%;">
                                                        <textarea class="form-control textarea-inputs h-100" cols="25" asp-for="ContractSettlement.ExpensesReasons" id="Expense-statement-input" aria-describedby="inputGroupPrepend"></textarea>
                                                        <div class="row requird-field-row-last">
                                                            <span class="requird-field" id="requird_field_ExpensesReasons" asp-validation-for="@Model.ContractSettlement.ExpensesReasons"></span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <div class="upload__box d-flex">
                                                    <div class="upload_img-wrap_inner" style="display: flex;
                                                                  flex-wrap: wrap;
                                                                  gap: 10px ">
                                                        <div class="upload__img-box " id="FirstUpload-img">
                                                        </div>
                                                        <div class="upload__btn-box" id="upload__btn-box">
                                                            <label class="upload__btn">
                                                                <div class="upload-container-checking">
                                                                    <img class="upload-icon" src="~/BranchSys/Pages/img/Group (1).png" alt="Upload Icon" id="addImage">
                                                                    <input type="file" multiple accept="image/*" id="Expenses-images" class="upload__inputfile ">
                                                                </div>
                                                            </label>
                                                        </div>
                                                    </div>

                                                </div>
                                                <div class="row">
                                                    <p style="color: red;" id="ExpensesError">  </p>
                                                </div>
                                            </div>

                                        </div>

                                    </div>
                                    <div class="row button-row">
                                        <div class="button-card">
                                            <img src="~/BranchSys/Pages/img/Group.png" alt="Button Image"
                                                 class="next action-button"
                                                 style="vertical-align: middle; ">
                                            <input type="button" name="next" class="next action-button"
                                                   value="@localizer["Next"]" />
                                        </div>
                                        <div class="button-card">
                                            <input type="button" name="previous"
                                                   class="previous action-button-previous"
                                                   value="@localizer["Previous"]" />
                                            <img src="~/BranchSys/Pages/img/Vector.png" alt="Button Image"
                                                 class="previous action-button-previous"
                                                 style="vertical-align: middle; ">
                                        </div>
                                    </div>


                                </fieldset>
                                <fieldset id="ThirdFieldset">
                                    <div class="form-card form-card1">
                                        <div class="row flex-row-reverse">
                                            <div class="row">
                                                <div class="expensesDiv align-items-baseline ">
                                                    <div class="col-auto">
                                                        <p> @localizer["CrMasUserContractValidityInsurance"] </p>
                                                    </div>
                                                    <div class="col-auto personal-data">
                                                        <p>@localizer["AgainstOthers"] </p>
                                                    </div>
                                                </div>

                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="compensation-Div align-items-baseline ">
                                                <div class="col-auto">
                                                    <label for="compensation-input">@localizer["CompensationValue"]</label>
                                                </div>
                                                <div class="col-auto">
                                                    <input type="tel" class="form-control form-control1" style="width: 130px;" id="compensation-input" asp-for="ContractSettlement.CompensationValue" oninput="handleAmountPayed(this)" aria-describedby="inputGroupPrepend" autocomplete="off" required>
                                                    <div class="row requird-field-row-last">
                                                        <span class="requird-field" id="requird_field_CompensationValue" asp-validation-for="@Model.ContractSettlement.CompensationValue"></span>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>

                                        <div class="row flex-row-reverse compensation-Row  g-5">
                                            <div class="col-lg-5">

                                                <div class="row compensation-Div compensation-Div-textarea ">
                                                    <div class="col-auto">
                                                        <label for="compensation-statement-input">@localizer["CompensationStatement"]</label>
                                                    </div>
                                                    <div class="col-lg-9" style="height: 100%;">
                                                        <textarea class="form-control textarea-inputs h-100" cols="25" asp-for="ContractSettlement.CompensationReasons" id="compensation-statement-input" aria-describedby="inputGroupPrepend" required></textarea>
                                                        <div class="row requird-field-row-last">
                                                            <span class="requird-field" id="requird_field_CompensationReasons" asp-validation-for="@Model.ContractSettlement.CompensationReasons"></span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <div class="upload__box d-flex">
                                                    <div class="upload_img-wrap_inner" style="display: flex;flex-wrap: wrap; gap: 10px ">
                                                        <div class="upload__img-box " id="FirstUpload-img2">
                                                        </div>
                                                        <div class="upload__btn-box">
                                                            <label class="upload__btn">
                                                                <div class="upload-container-checking">
                                                                    <img class="upload-icon" src="~/BranchSys/Pages/img/Group (1).png" alt="Upload Icon" id="AddImageCompensation">
                                                                    <input type="file" multiple accept="image/*" id="compensation-images" class="upload__inputfile ">
                                                                </div>
                                                            </label>
                                                        </div>
                                                    </div>

                                                </div>
                                                <div class="row">
                                                    <p style="color: red;" id='compensationError'> </p>
                                                </div>
                                            </div>

                                        </div>

                                    </div>
                                    <div class="row button-row">
                                        <div class="button-card">
                                            <img src="~/BranchSys/Pages/img/Group.png" alt="Button Image"
                                                 class="next action-button"
                                                 style="vertical-align: middle; ">
                                            <input type="button" name="next" class="next action-button"
                                                   value="@localizer["Next"]" />
                                        </div>
                                        <div class="button-card">
                                            <input type="button" name="previous"
                                                   class="previous action-button-previous"
                                                   value="@localizer["Previous"]" />
                                            <img src="~/BranchSys/Pages/img/Vector.png" alt="Button Image"
                                                 class="previous action-button-previous"
                                                 style="vertical-align: middle; ">
                                        </div>
                                    </div>


                                </fieldset>
                                <fieldset id="FourthFieldset">
                                    <div class="form-card">
                                        <div class="row">
                                            <div class="col-lg-6">
                                                <div class="row CurrentReadingg_row flex-row-reverse">
                                                    <div class="col-md-6 sett_checkField">
                                                        <div class="col-auto ">
                                                            <p> @localizer["ReadingBefore"]</p>
                                                        </div>
                                                        <div class="col personal-data">
                                                            <p id="PreviousKM">@Model.ContractSettlement.CrCasRenterContractBasicCurrentReadingMeter?.ToString("N0")</p>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6 sett_checkField">
                                                        <div class="col-auto ">
                                                            <p> @localizer["DailyFreeKm"] </p>
                                                        </div>
                                                        <div class="col personal-data">
                                                            <p id="FreeKM">@Model.ContractSettlement.CrCasRenterContractBasicTotalDailyFreeKm?.ToString("N0")</p>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row CurrentReadingg_row flex-row-reverse">
                                                    <div class="col-md-6 sett_checkField flex-wrap">
                                                        <div class="col-auto">
                                                            <label id="CurrentReadingg"
                                                                   for="CurrentReadingg-input">
                                                                @localizer["CurrentMeter"]
                                                            </label>
                                                        </div>
                                                        <div class="col-lg-auto  d-flex flex-column align-items-end">
                                                            <input type="text" class="form-control form-control1" style="width: 130px;" id="CurrentMeter" asp-for="ContractSettlement.CurrentMeter" aria-describedby="inputGroupPrepend" oninput="this.value=this.value.replace(/[^0-9]/g,'')" autocomplete="off" maxlength="7">
                                                            <div class="row requird-field-row-last mb-2" style="height: 52px;">
                                                                <div class="col-12">
                                                                    <span class="requird-field" style="font-size: .625rem;" id="requird_field_CurrentMeter" asp-validation-for="@Model.ContractSettlement.CurrentMeter"></span>
                                                                    <div>
                                                                        <span class="requird-field" id="Error_CurrentMeter" style="font-size: .625rem; color: red;"></span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6 sett_checkField">
                                                        <div class="col-auto ">
                                                            <p> @localizer["AdditionalKm"] </p>
                                                        </div>
                                                        <div class="col personal-data">
                                                            <p id="AdditionalKM">0</p>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="upload__box d-flex">
                                                    <div class="upload_img-wrap_inner" style="display: flex; flex-wrap: wrap; gap: 10px ">
                                                        <div class="upload__img-box " id="FirstUpload-img3">
                                                        </div>
                                                        <div class="upload__btn-box">
                                                            <label class="upload__btn">
                                                                <div class="upload-container-checking">
                                                                    <img class="upload-icon" src="~/BranchSys/Pages/img/Group (1).png" alt="Upload Icon" id="">
                                                                    <input type="file" multiple accept="image/*" id="examination-images" class="upload__inputfile ">
                                                                </div>
                                                            </label>
                                                        </div>
                                                    </div>

                                                </div>
                                                <div class="row">
                                                    <p style="color: red;" id="examinationError"> </p>
                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <div class="table-scroll " id="SettlementTable">
                                                    <table class="table table-bordered  table-hover">
                                                        <thead>
                                                            <tr>
                                                                <th scope="col"
                                                                    class="value-tabel-header">
                                                                    @localizer["reasons"]
                                                                </th>
                                                                <th scope="col"
                                                                    style='border-left: 1px solid #ff9626a3; width: 40%; '>
                                                                    @localizer["CheckUpNames"]
                                                                </th>

                                                            </tr>
                                                        </thead>
                                                        <tbody id="CheckBody">
                                                            <partial name="_CheckUpListSettlement" />
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="row button-row">
                                        <div class="button-card">
                                            <img src="~/BranchSys/Pages/img/Group.png" alt="Button Image"
                                                 class="next action-button"
                                                 style="vertical-align: middle; ">
                                            <input type="button" name="next" class="next action-button"
                                                   value="@localizer["Next"]" />
                                        </div>
                                        <div class="button-card">
                                            <input type="button" name="previous"
                                                   class="previous action-button-previous"
                                                   value="@localizer["Previous"]" />
                                            <img src="~/BranchSys/Pages/img/Vector.png" alt="Button Image"
                                                 class="previous action-button-previous"
                                                 style="vertical-align: middle; ">
                                        </div>
                                    </div>

                                </fieldset>
                                <fieldset id="FifthFieldset">
                                    <div class="form-card form-card5-settl">
                                        <div class="row data-col-Settl g-3">
                                            <div class="col-xl-4 data-col-Settl contract-Settl-row ">
                                                <div class="col-auto ">
                                                    <P>@localizer["ContractNo"]  </P>
                                                </div>
                                                <div class="col-auto personal-data ">
                                                    <P>@Model.ContractSettlement.CrCasRenterContractBasicNo</P>
                                                </div>
                                                <div class="col-md-8 col-lg-10 seacrh-icon-col1">
                                                    <div>
                                                        <img src="~/BranchSys/Pages/img/seacrh-icon.png" alt="seacrh-icon Image" id="contract-value-Settlement3">
                                                    </div>
                                                    <div class="dropdown-content" id="dropdown-content-Settlement3">
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p>  : @localizer["Renterr"] </p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                @if (requestCulture?.RequestCulture.UICulture.Name != "ar-EG")
                                                                {
                                                                    <p>@Model.ContractSettlement.CrCasRenterContractBasic5?.CrCasRenterLessorNavigation.CrMasRenterInformationEnName</p>
                                                                }
                                                                else
                                                                {
                                                                    <p>@Model.ContractSettlement.CrCasRenterContractBasic5?.CrCasRenterLessorNavigation.CrMasRenterInformationArName</p>
                                                                }
                                                            </div>

                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p>: @localizer["Car"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                @if (requestCulture?.RequestCulture.UICulture.Name != "ar-EG")
                                                                {
                                                                    <p>@Model.ContractSettlement.CrCasRenterContractBasicCarSerailNoNavigation?.CrCasCarInformationConcatenateEnName</p>
                                                                }
                                                                else
                                                                {
                                                                    <p>@Model.ContractSettlement.CrCasRenterContractBasicCarSerailNoNavigation?.CrCasCarInformationConcatenateArName</p>
                                                                }
                                                            </div>
                                                        </div>

                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p>: @localizer["StartContract"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p>@Model.ContractSettlement.CrCasRenterContractBasicExpectedStartDate?.ToString("yyyy/MM/dd HH:mm", CultureInfo.InvariantCulture)</p>
                                                            </div>
                                                        </div>

                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p>: @localizer["EndContract"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p id="EndContract"></p>
                                                            </div>
                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p>: @localizer["DaysNo"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p id="DaysNoContract"></p>
                                                            </div>
                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p> : @localizer["EndAuth"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p>@Model.ContractSettlement.AuthEndDate?.ToString("yyyy/MM/dd", CultureInfo.InvariantCulture)</p>
                                                            </div>
                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p>: @localizer["DiscountRate"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p>%@Model.ContractSettlement.CrCasRenterContractBasicUserDiscountRate?.ToString("N2", CultureInfo.InvariantCulture)</p>
                                                            </div>
                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p>: @localizer["TaxRate"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p>%@Model.ContractSettlement.CrCasRenterContractBasicTaxRate?.ToString("N2", CultureInfo.InvariantCulture) </p>
                                                            </div>
                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p> : @localizer["ExtraHourValue"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p>@Model.ContractSettlement.CrCasRenterContractBasicHourValue?.ToString("N2", CultureInfo.InvariantCulture) </p>
                                                            </div>

                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p> : @localizer["AdditionalKmValue"]  </p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p>@Model.ContractSettlement.CrCasRenterContractBasicKmValue?.ToString("N2", CultureInfo.InvariantCulture) </p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=" col-md-auto col-lg-6 data-col-Settl flex-wrap Settlement-date">
                                                <div class="col-auto ">
                                                    <P>@localizer["SettlementDate"]</P>
                                                </div>
                                                <div class="col-auto personal-data ">
                                                    <P>@DateTime.Now.ToString("yyyy/MM/dd", CultureInfo.InvariantCulture)</P>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row data-col-Settl g-3">
                                            <div class=" col-xl-8 data-col-Settl flex-wrap ">
                                                <div class="col-auto ">
                                                    <P>@localizer["ContractValue"]</P>
                                                </div>
                                                <div class="col-auto personal-data ">
                                                    <P id="ContractValue">0.00</P>
                                                </div>
                                                <div class="col-md-6 col-lg-5 col-xl-5 seacrh-icon-col">
                                                    <div>

                                                        <img src="~/BranchSys/Pages/img/seacrh-icon.png" alt="seacrh-icon Image" id="contract-value-Settlement4">
                                                    </div>
                                                    <div class="dropdown-content" id="dropdown-content-Settlement4">
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p> :@localizer["RentalValue"] </p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p id="RentalValue">0.00</p>
                                                            </div>

                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p>:@localizer["DelegationValue"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p id="DelegationValue">0.00</p>
                                                            </div>

                                                        </div>

                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p>:@localizer["Features"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p id="Features">0.00</p>
                                                            </div>

                                                        </div>

                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p> :@localizer["AdditionalDriver"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p id="AdditionalDriver">0.00</p>
                                                            </div>

                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p> :@localizer["PrivateDriver"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p id="PrivateDriver">0.00</p>
                                                            </div>

                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p> :@localizer["Choices"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p id="Choices">0.00</p>
                                                            </div>

                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p> :@localizer["Additionals"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p id="Additionals">0.00</p>
                                                            </div>

                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p> :@localizer["ExtraHoursValue"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p id="ExtraHoursValue">0.00</p>
                                                            </div>

                                                        </div>
                                                        <div class="row dropdown-content-row">
                                                            <div class="col-auto ">
                                                                <p> :@localizer["ExtraKMsValue"]</p>
                                                            </div>
                                                            <div class="col personal-data">
                                                                <p id="ExtraKMsValue">0.00</p>
                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row data-col-Settl g-3">

                                            <div class="col-md-4">
                                                <div class="data-col-Settl">
                                                    <div class="col-auto "><p>@localizer["ContractValueAfterDiscount"]</p></div>
                                                    <div class="col-auto personal-data p-0"><p id="ContractValueAfterDiscount">0.00</p></div>
                                                </div>
                                            </div>
                                            <div class="col-md-auto">
                                                <div class="data-col-Settl">
                                                    <div class="col-auto "><p>@localizer["TaxValue"] </p></div>
                                                    <div class="col-auto personal-data p-0"><p id="TaxValue">0.00</p></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row data-col-Settl g-3">
                                            <div class="col-md-4">
                                                <div class="data-col-Settl">
                                                    <div class="col-auto "><p>@localizer["TotalContract"]</p></div>
                                                    <div class="col-auto personal-data p-0"><p id="TotalContract">0.00</p></div>
                                                </div>

                                            </div>
                                            <div class="col-md-4">
                                                <div class="data-col-Settl">
                                                    <div class="col-auto "><p>@localizer["TotalExpenseValue"]</p></div>
                                                    <div class="col-auto personal-data p-0"><p id="TotalExpenseValue">0.00</p></div>
                                                </div>
                                            </div>
                                            <div class="col-md-auto">
                                                <div class="data-col-Settl">
                                                    <div class="col-auto "><p>@localizer["TotalCompensationValue"]</p></div>
                                                    <div class="col-auto personal-data p-0"><p id="TotalCompensationValue">0.00</p></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row data-col-Settl g-3">
                                            <div class="col-md-4">
                                                <div class="data-col-Settl">
                                                    <div class="col-auto "><p>@localizer["PreviousBalance"]</p></div>
                                                    <div class="col-auto personal-data p-0"><p>@Model.ContractSettlement.CrCasRenterContractBasic5.CrCasRenterLessorAvailableBalance?.ToString("N2", CultureInfo.InvariantCulture)</p></div>
                                                </div>

                                            </div>
                                            <div class="col-md-4">
                                                <div class="data-col-Settl">
                                                    <div class="col-auto "><p id="RenterMoneyText">@localizer["AmountRequired"]</p></div>
                                                    <div class="col-auto personal-data p-0"><p id="AmountRequired">0.00</p></div>
                                                </div>
                                            </div>
                                            @* <div class="col-md-auto">
                                            <div class="data-col-Settl">
                                            <div class="col-auto "><p id="RenterMoneyText">@localizer["RenterMoneyText1"]</p></div>
                                            <div class="col-auto personal-data p-0"><p id="RenterMoneyValue">0.00</p></div>
                                            </div>
                                            </div> *@
                                        </div>
                                        <div class="row data-col-Settl g-3">
                                            <div class="col-md-auto col-lg-4 data-col-Settl">
                                                <div class="col-auto">
                                                    <label id="amount-paid" for="amount-paid-input">
                                                        @localizer["AmountPaid"]
                                                    </label>
                                                </div>
                                                <div class="col-auto">
                                                    <input type="text" class="form-control form-control2" asp-for="ContractSettlement.AmountPayed" id="AmountPayed" oninput="handleAmountPayed(this)" oninput="handleAmountPayed(this)" autocomplete="off" required>
                                                    <div class="row requird-field-row-last">
                                                        <p class="requird_field_AmountPayed"></p>
                                                    </div>
                                                </div>

                                            </div>
                                            @{
                                                if (Model?.AccountBanks?.FindAll(x => x.CrCasAccountBankNo != "00").Count() == 0)
                                                {
                                                    Model.PaymentMethods = Model?.PaymentMethods?.FindAll(x => x.CrMasSupAccountPaymentMethodClassification == "1");
                                                }
                                                else if (Model?.AccountBanks?.FindAll(x => x.CrCasAccountBankNo != "00").Count() > 0 && Model?.SalesPoint?.FindAll(x => x.CrCasAccountSalesPointBank != "00").Count() == 0)
                                                {
                                                    Model.PaymentMethods = Model?.PaymentMethods?.FindAll(x => x.CrMasSupAccountPaymentMethodClassification == "3" || x.CrMasSupAccountPaymentMethodClassification == "1");
                                                }
                                                else if (Model?.AccountBanks?.FindAll(x => x.CrCasAccountBankNo != "00").Count() > 0 && Model?.SalesPoint?.FindAll(x => x.CrCasAccountSalesPointBank != "00").Count() > 0)
                                                {
                                                    Model.PaymentMethods = Model?.PaymentMethods?.FindAll(x => x.CrMasSupAccountPaymentMethodClassification == "2" || x.CrMasSupAccountPaymentMethodClassification == "3" || x.CrMasSupAccountPaymentMethodClassification == "1");
                                                }
                                            }
                                            <div class="col-md-auto col-lg-4 d-flex flex-nowrap data-col-Settl">
                                                <div class="col-auto d-flex ps-0">
                                                    <label id="payment-method" for="payment-method-select">@localizer["PaymentMethod"]</label>

                                                </div>
                                                <div class="col-auto ">
                                                    <div class="offset">
                                                        <select class="form-select form-select-last" asp-for="ContractSettlement.PaymentMethod" disabled>
                                                            <option selected disabled></option>
                                                            @foreach (var payment in Model.PaymentMethods)
                                                            {
                                                                @if (requestCulture?.RequestCulture.UICulture.Name != "en-US")
                                                                {
                                                                    <option value="@payment.CrMasSupAccountPaymentMethodCode" class="text-right">@payment.CrMasSupAccountPaymentMethodArName</option>
                                                                }
                                                                else
                                                                {
                                                                    <option value="@payment.CrMasSupAccountPaymentMethodCode">@payment.CrMasSupAccountPaymentMethodEnName</option>
                                                                }
                                                            }
                                                        </select>
                                                        <div class="row requird-field-row-last">
                                                            <span class="requird-field" id="requird_field_PaymentMethod" asp-validation-for="@Model.ContractSettlement.PaymentMethod"></span>
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="col-md-auto  data-col-Settl ">
                                                <div class="col-auto d-flex ps-0 ">
                                                    <label id="selling-point" for="selling-point-dropdown">@localizer["SalesPoint"]</label>
                                                </div>
                                                <div class="col-auto ">
                                                    <div class="offset">
                                                        <select class="form-select form-select-last " style="width: 250px" asp-for="ContractSettlement.SalesPoint" required>
                                                        </select>
                                                        <div class="row requird-field-row-last">
                                                            <span class="requird-field" id="requird_field_SalesPoint" asp-validation-for="@Model.ContractSettlement.SalesPoint"></span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row p-2" style="flex-direction:row-reverse">
                                            <div class="col-auto">
                                                <label id="notes" for="FormControl-last-Textarea">@localizer["reasons"]</label>
                                            </div>
                                            <div class="col-sm-10 col-md-7 col-lg-7">
                                                <textarea class="form-control textarea-inputs" rows="1" maxlength="100" asp-for="ContractSettlement.CrCasRenterContractBasicReasons"></textarea>
                                            </div>

                                        </div>
                                    </div>

                                    <div class="row button-row align-items-center"
                                         style="padding: 6px 7px 0px 20px;">
                                        <div class="button-card  gap-2">
                                            <button id="submitForm" class="btn btn-custom next">@localizer["Save"]</button>

                                        </div>
                                        <div class="button-card">
                                            <input type="button" name="previous"
                                                   class="previous action-button-previous" value="@localizer["Previous"]" />
                                            <img src="~/BranchSys/Pages/img/Vector.png" alt="Button Image"
                                                 class="previous action-button-previous"
                                                 style="vertical-align: middle; margin-right: 10px;">
                                        </div>
                                    </div>

                                </fieldset>
                            </form>
                        </div>
                    </div>
                </div>


            </div>
        </div>
    </section>
    <div class="main" style="display:none">
        <div class="container1">
            <div>   <img src="@Url.Content(lessorInfo?.CrMasUserInformationLessorNavigation?.CrMasLessorImage?.CrMasLessorImageLogo)" class="logo"></div>
            <br>
            <div class="container2">
                <div class="dash uno"></div>
                <div class="dash dos"></div>
                <div class="dash tres"></div>
                <div class="dash cuatro"></div>
            </div>
        </div>
    </div>
</div>


<footer class="fixed-bottom-xl">
    <div class="before-footer-widget">
        <svg width: 100%; height:auto viewbox="0 0 2444 132">
            <path fill="rgba(254, 248, 232, 1)" fill-rule="evenodd"
                  d="M1222 0h1222c-444.13 88-852.127 132-1223.993 132C849.253 132 442.585 88.263 0 .789V0h1222z">
            </path>
        </svg>
    </div>

</footer>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/BranchSys/Pages/js/Settlement.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // const year = now.getFullYear().toString().padStart(4, '0');
            // const month = (now.getMonth() + 1).toString().padStart(2, '0');
            // const day = now.getDate().toString().padStart(2, '0');
            // const dateValue = `${year}-${month}-${day}`;
            const now = new Date();
            const endDateString = "@Model.ContractSettlement.CrCasRenterContractBasicExpectedEndDate?.ToString("yyyy/MM/dd HH:mm:ss", CultureInfo.InvariantCulture)";
            const endDate = new Date(endDateString);

            if (endDate < now) {
                const year = now.getFullYear().toString().padStart(4, '0');
                const month = (now.getMonth() + 1).toString().padStart(2, '0');
                const day = now.getDate().toString().padStart(2, '0');
                const dateValue = `${year}-${month}-${day}`;
                document.getElementById("contract_real_endTime").value = dateValue;
            } else {
                const year = endDate.getFullYear().toString().padStart(4, '0');
                const month = (endDate.getMonth() + 1).toString().padStart(2, '0');
                const day = endDate.getDate().toString().padStart(2, '0');
                const dateValue = `${year}-${month}-${day}`;
                document.getElementById("contract_real_endTime").value = dateValue;
            }
            document.getElementById("contract_real_endTime").min = now.toISOString().split('T')[0];
            // const hours = now.getHours().toString().padStart(2, '0');
            // const minutes = now.getMinutes().toString().padStart(2, '0');
            // const timeValue = `${hours}:${minutes}`;
            // document.getElementById("settlementTime").value = timeValue;

        });
        //To Hide mechanismSettlement..
        // document.addEventListener("DOMContentLoaded", function () {
        //     const endDateString = "@Model.ContractSettlement.CrCasRenterContractBasicExpectedEndDate?.ToString("yyyy/MM/dd HH:mm:ss", CultureInfo.InvariantCulture)";
        //     const endDate = new Date(endDateString);
        //     const currentDate = new Date();
        //     const elementToHide = document.getElementById("mechanismSettlement");
        //     console.log("endDate", endDate)
        //     console.log("currentDate", currentDate)
        //     if (currentDate > endDate) {
        //         if (elementToHide) {
        //             elementToHide.style.display = "";
        //         }
        //     }

        // });
        var diffMinutes = 0;
        var diffHours = 0;
        var diff = 0;
        var totalDaysNo = 0;

        document.addEventListener("DOMContentLoaded", function () {
            const elementToHide = document.getElementById("mechanismSettlement");
            var SettelmentAuth = "@userInfo?.CrMasUserContractValidity?.CrMasUserContractValidityEnd";
            const startContractDateString = "@Model.ContractSettlement.CrCasRenterContractBasicExpectedStartDate?.ToString("yyyy-MM-ddTHH:mm:ss", CultureInfo.InvariantCulture)";
            const TotalFreeHours = "@Model.ContractSettlement.CrCasRenterContractBasicTotalFreeHours";
            const MaxHours = "@Model.ContractSettlement.CrCasRenterContractBasicHourMax";
            console.log("TotalFreeHours", TotalFreeHours);
            console.log("MaxHours", MaxHours);
            console.log("SettelmentAuth", SettelmentAuth);

            const startContractDate = new Date(startContractDateString);
            const now = new Date();
            const currentHour = now.getHours();
            const currentMinute = now.getMinutes();
            const currentSecond = now.getSeconds();
            // Convert hour, minute, and second to strings if needed
            const hourString = currentHour.toString().padStart(2, '0'); // Pad with zero if single digit
            const minuteString = currentMinute.toString().padStart(2, '0'); // Pad with zero if single digit
            const secondString = currentSecond.toString().padStart(2, '0'); // Pad with zero if single digit
            const timeString = `${hourString}:${minuteString}:${secondString}`;

            function calculateDifference() {
                const settlementDateString = document.getElementById("contract_real_endTime").value;

                const settlementDateTimeString = settlementDateString + "T" + timeString;
                const settlementDateTime = new Date(settlementDateTimeString);

                const timeDiff = Math.abs(settlementDateTime.getTime() - startContractDate.getTime());
                const diffDays = Math.floor(timeDiff / (1000 * 3600 * 24)); // Difference in days
                diffHours = Math.floor((timeDiff % (1000 * 3600 * 24)) / (1000 * 3600)); // Remaining difference in hours
                diffMinutes = Math.floor((timeDiff % (1000 * 3600)) / (1000 * 60)); // Remaining difference in minutes
                diff = parseInt(diffHours) - parseInt(TotalFreeHours) - parseInt(MaxHours);
                console.log("diff", diff);
                $("#daysNo").text(diffDays);

                //In PaymentPage
                var endContractDate = new Date(startContractDate);
                endContractDate.setDate(startContractDate.getDate() + diffDays);
                // Formatting endContractDate as "yyyy/MM/dd HH:MM"
                var formattedEndContractDate = endContractDate.getFullYear() + '/' + ('0' + (endContractDate.getMonth() + 1)).slice(-2) + '/' + ('0' + endContractDate.getDate()).slice(-2) + ' ' +
                    ('0' + endContractDate.getHours()).slice(-2) + ':' + ('0' + endContractDate.getMinutes()).slice(-2) + ':00';
                $("#DaysNoContract").text(diffDays);
                $("#EndContract").text(formattedEndContractDate);
                ////////////////////////////////////////////////////////////
                if (diff > 0 || (diff === 0 && diffMinutes > 0)) {
                    $("#diffHours").text(diff.toString().padStart(2, '0'));
                    $("#diffMinutes").text(diffMinutes.toString().padStart(2, '0'));
                    if (SettelmentAuth.toLowerCase() === "false" || SettelmentAuth == null || SettelmentAuth == "") {
                        $("#contract_real_endTime").prop('readonly', true).css('background-color', 'white');
                    }
                    else {
                        if (elementToHide) {
                            elementToHide.style.display = "";
                        }
                    }
                }
                else {
                    if (SettelmentAuth.toLowerCase() === "false" || SettelmentAuth == null || SettelmentAuth == "") {
                        $("#contract_real_endTime").prop('readonly', true).css('background-color', 'white');
                    }
                    $("#diffHours").text("00");
                    $("#diffMinutes").text("00");
                }

                console.log("Difference in days:", diffDays);
                console.log("Remaining difference in hours:", diffHours);
                console.log("Remaining difference in minutes:", diffMinutes);
                console.log("Remaining difference in timeDiff:", timeDiff);
                CaculateTotalDaysNo();
            }

            document.getElementById("contract_real_endTime").addEventListener("change", calculateDifference);
            // Call calculateDifference function when the page loads
            calculateDifference();
        });
    </script>
    <script>
        function clearExpensesData() {
            $("#expensesValue-input").val('');
            $("#Expense-statement-input").val('');
            $("#requird_field_ExpensesValue").text('').css("color", "");
            $("#requird_field_ExpensesReasons").text('').css("color", "");
            $("#ExpensesError").text('');
            ExpensesArray.splice(0, ExpensesArray.length);
            $('#SecondFieldset .upload__img-box').remove();
            console.log("ExpensesArray", ExpensesArray);
        }

        function clearCompensationData() {
            $("#compensation-input").val('');
            $("#compensation-statement-input").val('');
            $("#requird_field_CompensationValue").text('').css("color", "");
            $("#requird_field_CompensationReasons").text('').css("color", "");
            $("#compensationError").text('');
            compensationArray.splice(0, compensationArray.length);
            $('#ThirdFieldset .upload__img-box').remove();
            console.log("compensationArray", compensationArray);
        }

        function clearPaymentData() {
            $("#AmountPayed").val('');
            document.getElementById('ContractSettlement_PaymentMethod').disabled = true;
            document.getElementById('ContractSettlement_PaymentMethod').selectedIndex = 0;
            document.getElementById('ContractSettlement_SalesPoint').disabled = true;
            document.getElementById('ContractSettlement_SalesPoint').selectedIndex = 0;
            $("#ContractSettlement_SalesPoint").empty();
        }





        function CaculateTotalDaysNo() {
            var DaysNo = parseInt($("#daysNo").text());
            var settlementMechanismValue = parseInt($("#Settlement-mechanism").val());
            console.log("settlementMechanismValue", settlementMechanismValue)
            if (settlementMechanismValue == 0) {
                totalDaysNo = DaysNo;
            }
            else if (settlementMechanismValue == 1) {
                totalDaysNo = DaysNo + 1;
            }
            else if (settlementMechanismValue == 2) {
                totalDaysNo = DaysNo + (1 / 2);
            }
            else if (settlementMechanismValue == 3) {
                totalDaysNo = DaysNo + (1 / 4);
            }
            else {
                if (diff > 0 || (diff === 0 && diffMinutes > 0)) {
                    totalDaysNo = DaysNo + 1;
                }
                else {
                    totalDaysNo = DaysNo;
                }
            }
            console.log("totalDaysNo", totalDaysNo)
            $("#ContractSettlement_ActualDaysNo").val(totalDaysNo);
        }

        var AdditionalKm = 0;
        // Function to calculate and update additional KM
        function calculateAdditionalKM(enteredValue) {
            var PreviousMeterInput = '@Model.ContractSettlement.CrCasRenterContractBasicCurrentReadingMeter';
            var PreviousMeterValue = parseInt(PreviousMeterInput) || 0;
            var AdditionalKmFreeDaily = '@Model.ContractSettlement.CrCasRenterContractBasicTotalDailyFreeKm';
            var TotalAdditionalKM = parseFloat(totalDaysNo) * parseInt(AdditionalKmFreeDaily);
            if (enteredValue <= PreviousMeterValue) {
                $("#Error_CurrentMeter").text("@localizer["requirdfieldCurrentMeter"]" + " " + PreviousMeterValue);
            } else {
                var Free = TotalAdditionalKM + PreviousMeterValue;
                AdditionalKm = enteredValue - Free;
                console.log("Free", Free)
                console.log("Additional", AdditionalKm)

                if (AdditionalKm <= 0) {
                    $("#AdditionalKM").text("0");
                    AdditionalKm = 0;
                    console.log("Additional-----", AdditionalKm)
                } else {
                    $("#AdditionalKM").text(AdditionalKm.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 }));
                    console.log("Additional+++++", AdditionalKm)
                }
                $("#Error_CurrentMeter").text("");
            }
        }
        var CurrentMeterInput = $("#CurrentMeter");
        // Bind events to CurrentMeterInput
        CurrentMeterInput.on("focusout", function () {
            var enteredValue = parseFloat($(this).val()) || 0;
            calculateAdditionalKM(enteredValue);
            $("#ContractSettlement_AdditionalKm").val(AdditionalKm);
        });
    </script>
    <script>
        // $("#Settlement-mechanism").change(function () {
        //     console.log($("#SettlementForm"));
        // })

        const nextButtons = document.querySelectorAll(".next");

        Array.from(nextButtons).forEach((nextBtn) => {
            nextBtn.addEventListener("click", (event) => {
                var field = nextBtn.closest("fieldset");
                const ExpensesCheckbox = document.getElementById('expenses-check');
                const CompensationCheckbox = document.getElementById('compensation-check');
                const firsetfield = document.getElementById('firstFieldset');
                const fieldsets = document.querySelectorAll("fieldset");
                if ($("#SettlementForm").valid()) {
                    const current_fs = nextBtn.closest("fieldset");
                    let next_fs = current_fs.nextElementSibling;
                    CaculateTotalDaysNo();
                    if (current_fs.id === 'firstFieldset') {
                        $("#ExpensesError").text('');
                        $("#requird_field_ExpensesValue").text('').css("color", "");
                        $("#requird_field_ExpensesReasons").text('').css("color", "");
                        if (!ExpensesCheckbox.checked && CompensationCheckbox.checked) {
                            clearExpensesData();
                            $("#requird_field_CompensationValue").text('').css("color", "");
                            $("#requird_field_CompensationReasons").text('').css("color", "");
                            $("#compensationError").text('');
                            next_fs = current_fs.nextElementSibling.nextElementSibling;
                            $("#progressbar li").eq($("fieldset").index(current_fs.nextElementSibling)).addClass("active");
                            $("#progressbar li").eq($("fieldset").index(next_fs)).addClass("active");
                            next_fs.style.display = "flex";
                            current_fs.style.display = "none";

                        } else if (!ExpensesCheckbox.checked && !CompensationCheckbox.checked) {
                            clearExpensesData();
                            clearCompensationData();
                            next_fs = current_fs.nextElementSibling.nextElementSibling.nextElementSibling;
                            $("#progressbar li").eq($("fieldset").index(current_fs.nextElementSibling)).addClass("active");
                            $("#progressbar li").eq($("fieldset").index(current_fs.nextElementSibling.nextElementSibling)).addClass("active");
                            $("#progressbar li").eq($("fieldset").index(next_fs)).addClass("active");
                            next_fs.style.display = "flex";
                            current_fs.style.display = "none";
                        }
                        else {
                            next_fs = current_fs.nextElementSibling;
                            $("#progressbar li").eq($("fieldset").index(next_fs)).addClass("active");
                            next_fs.style.display = "flex";
                            current_fs.style.display = "none";
                        }
                    }
                    if (current_fs.id === 'SecondFieldset') {
                        $("#ExpensesError").text('');
                        var imgs = true;
                        // Check if the div contains at least one img element
                        if ($('.upload__img-box img.close1').length > 0) {
                            console.log("The div contains at least one img element");
                        } else {
                            imgs = false;
                        }
                        if (imgs) {
                            if (ExpensesCheckbox.checked && !CompensationCheckbox.checked) {
                                clearCompensationData();
                                next_fs = current_fs.nextElementSibling.nextElementSibling;
                                $("#progressbar li").eq($("fieldset").index(current_fs.nextElementSibling)).addClass("active");
                                $("#progressbar li").eq($("fieldset").index(next_fs)).addClass("active");
                                next_fs.style.display = "flex";
                                current_fs.style.display = "none";
                            }
                            else {
                                $("#requird_field_CompensationValue").text('').css("color", "");
                                $("#requird_field_CompensationReasons").text('').css("color", "");
                                $("#compensationError").text('');
                                $("#progressbar li").eq($("fieldset").index(next_fs)).addClass("active");
                                next_fs.style.display = "flex";
                                current_fs.style.display = "none";
                            }
                        }
                        else {
                            $("#ExpensesError").text('@localizer["ExpensesMessageImageRequired"]');
                        }

                    }
                    if (current_fs.id === 'ThirdFieldset') {
                        $("#compensationError").text('');
                        var imgs = true;
                        // Check if the div contains at least one img element
                        if ($('.upload__img-box img.close2').length > 0) {
                            console.log("The div contains at least one img element");
                        } else {
                            imgs = false;
                        }
                        if (imgs) {
                            $("#progressbar li").eq($("fieldset").index(next_fs)).addClass("active");
                            next_fs.style.display = "flex";
                            current_fs.style.display = "none";
                        }
                        else {
                            $("#compensationError").text('@localizer["ExpensesMessageImageRequired"]');
                        }

                    }
                    if (current_fs.id === 'FourthFieldset') {
                        var allChecked = true;
                        var currentMeter = true;
                        var imgs = true;

                        // Check checkboxes
                        var checkboxes = document.querySelectorAll(".CheckUp");
                        checkboxes.forEach(function (checkbox) {
                            if (!checkbox.checked) {
                                allChecked = false;
                            }
                        });

                        // Check currentMeterSpan
                        var currentMeterSpan = $("#Error_CurrentMeter");
                        if (currentMeterSpan.text().trim() === "") {
                            console.log("Span is empty");
                        } else {
                            currentMeter = false;
                        }

                        // Check if the div contains at least one img element
                        if ($('.upload__img-box img.close3').length > 0) {
                            console.log("The div contains at least one img element");
                        } else {
                            imgs = false;
                        }
                        if (imgs && currentMeter && allChecked) {
                            $("#progressbar li").eq($("fieldset").index(next_fs)).addClass("active");
                            next_fs.style.display = "flex";
                            current_fs.style.display = "none";
                            clearPaymentData();
                            CaculateContractSettelement();
                        }
                        else {
                            $("#examinationError").text('@localizer["checkUpMessageRequired"]')
                        }
                    }

                }
            });
        });

        const previousButtons = document.querySelectorAll(".previous");

        Array.from(previousButtons).forEach((prevBtn) => {
            prevBtn.addEventListener("click", (event) => {
                const ExpensesCheckbox = document.getElementById('expenses-check');
                const CompensationCheckbox = document.getElementById('compensation-check');
                const current_fs = prevBtn.closest("fieldset");
                let previous_fs = current_fs.previousElementSibling;
                if (current_fs.id === 'FourthFieldset') {

                    if (ExpensesCheckbox.checked && CompensationCheckbox.checked) {
                        previous_fs = current_fs.previousElementSibling;
                    } else if (!ExpensesCheckbox.checked && !CompensationCheckbox.checked) {
                        previous_fs = current_fs.previousElementSibling.previousElementSibling.previousElementSibling;
                        $("#progressbar li").eq($("fieldset").index(current_fs.previousElementSibling)).removeClass("active");
                        $("#progressbar li").eq($("fieldset").index(current_fs.previousElementSibling.previousElementSibling)).removeClass("active");
                    } else if (ExpensesCheckbox.checked && !CompensationCheckbox.checked) {
                        previous_fs = current_fs.previousElementSibling.previousElementSibling;
                        $("#progressbar li").eq($("fieldset").index(current_fs.previousElementSibling)).removeClass("active");
                    }
                }

                if (current_fs.id === 'ThirdFieldset') {

                    if (!ExpensesCheckbox.checked && CompensationCheckbox.checked) {
                        previous_fs = current_fs.previousElementSibling.previousElementSibling;
                        $("#progressbar li").eq($("fieldset").index(current_fs.previousElementSibling)).removeClass("active");

                    }
                }
                Array.from(previous_fs.elements).forEach((field) => {
                    //field.addEventListener('input', () => {
                    //    hideErrorMessage(field);
                    //});
                });
                $("#progressbar li").eq($("fieldset").index(current_fs)).removeClass("active");

                previous_fs.style.display = "flex";
                current_fs.style.display = "none";
            });
        });
    </script>
    <script>
        var rentValue = 0;
        var FeesTammValue = 0;
        var advantagesValueTotal = 0;
        var AdditionalDriverValue = 0;
        var PrivateDriverValueTotal = 0;
        var ChoicesValueTotal = 0;
        var AdditionalValue = 0;
        var AdditionalHoursValueTotal = 0;
        var AdditionalKMValueTotal = 0;
        var ContractValue = 0;
        var ContractValueAfterDiscount = 0;
        var taxValue = 0;
        var TotalContract = 0;
        var ExpensesValue = 0;
        var compensationValue = 0;
        var AmountRequired = 0;
        var somethingIsNotOkay = true;
        function CaculateContractSettelement() {

            //Rental Price
            var rentalPricePerDay = @Html.Raw(Json.Serialize(Model?.ContractSettlement?.CrCasRenterContractBasicDailyRent));
            rentValue = totalDaysNo * parseFloat(rentalPricePerDay);
            document.getElementById('RentalValue').textContent = rentValue.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });

            // FeesTamm
            var FeesTamm = @Html.Raw(Json.Serialize(Model?.ContractSettlement?.CrCasRenterContractBasicAuthorizationValue));
            FeesTammValue = parseFloat(FeesTamm);
            document.getElementById('DelegationValue').textContent = FeesTammValue.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });

            // Advantages
            var AdvantagesValue = @Html.Raw(Json.Serialize(Model?.ContractSettlement?.AdvantagesValue));
            advantagesValueTotal = totalDaysNo * parseFloat(AdvantagesValue);
            document.getElementById('Features').textContent = advantagesValueTotal.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
            $("#ContractSettlement_AdvantagesValueTotal").val(advantagesValueTotal);

            //AdditionalDriver
            var AdditionalDriver = @Html.Raw(Json.Serialize(Model?.ContractSettlement?.CrCasRenterContractBasicAdditionalDriverValue));
            AdditionalDriverValue = parseFloat(AdditionalDriver);
            document.getElementById('AdditionalDriver').textContent = AdditionalDriverValue.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });

            //PrivateDriver
            var PrivateDriverValue = @Html.Raw(Json.Serialize(Model?.ContractSettlement?.CrCasRenterContractBasicPrivateDriverValue));
            PrivateDriverValueTotal = totalDaysNo * parseFloat(PrivateDriverValue);
            document.getElementById('PrivateDriver').textContent = PrivateDriverValueTotal.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
            $("#ContractSettlement_PrivateDriverValueTotal").val(PrivateDriverValueTotal);

            // Additionals
            var Additionals = @Html.Raw(Json.Serialize(Model?.ContractSettlement?.CrCasRenterContractBasicAdditionalValue));
            AdditionalValue = parseFloat(Additionals);
            document.getElementById('Additionals').textContent = AdditionalValue.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });

            //Choices
            var ChoicesValue = @Html.Raw(Json.Serialize(Model?.ContractSettlement?.ChoicesValue));
            ChoicesValueTotal = totalDaysNo * parseFloat(ChoicesValue);
            document.getElementById('Choices').textContent = ChoicesValueTotal.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
            $("#ContractSettlement_ChoicesValueTotal").val(ChoicesValueTotal);
            $("#ContractSettlement_ChoicesValueTotal").val(ChoicesValueTotal);

            // Additional Hours Value Total
            getAdditionalHoursValue();

            // Additional KMs Value Total
            if (AdditionalKm != null && AdditionalKm.toString() != "" && AdditionalKm != undefined) {
                getAdditionalKmValue();
                $("#ContractSettlement_AdditionalKm").val(AdditionalKm);
            }
            //Get ContractValue

            ContractValue = rentValue + FeesTammValue + advantagesValueTotal + AdditionalDriverValue + PrivateDriverValueTotal + AdditionalValue + ChoicesValueTotal + AdditionalHoursValueTotal + AdditionalKMValueTotal;
            document.getElementById('ContractValue').textContent = ContractValue.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
            $("#ContractSettlement_ContractValue").val(ContractValue);

            // get ContractValueAfterDiscount
            var discountRate = @Html.Raw(Json.Serialize(Model?.ContractSettlement?.CrCasRenterContractBasicUserDiscountRate));
            var discountValue = ContractValue * (parseFloat(discountRate) / 100);
            $("#ContractSettlement_DiscountValue").val(discountValue);

            ContractValueAfterDiscount = ContractValue - discountValue;
            $("#ContractSettlement_ContractValueAfterDiscount").val(ContractValueAfterDiscount);
            document.getElementById('ContractValueAfterDiscount').textContent = ContractValueAfterDiscount.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });

            // get Tax Value
            var taxRate = @Html.Raw(Json.Serialize(Model?.ContractSettlement?.CrCasRenterContractBasicTaxRate));
            taxValue = ContractValueAfterDiscount * (parseFloat(taxRate) / 100);
            $("#ContractSettlement_TaxValue").val(taxValue);

            document.getElementById('TaxValue').textContent = taxValue.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
            // get TotalContract
            TotalContract = ContractValueAfterDiscount + taxValue;
            $("#ContractSettlement_TotalContract").val(TotalContract);
            document.getElementById('TotalContract').textContent = TotalContract.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });

            // expenses Value
            var expensesInput = $("#expensesValue-input").val();
            if (parseFloat(expensesInput) > 0) {
                ExpensesValue = parseFloat(expensesInput);
            } else {
                ExpensesValue = 0;
            }
            document.getElementById('TotalExpenseValue').textContent = ExpensesValue.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });

            // compensation Value
            var compensationInput = $("#compensation-input").val();
            if (parseFloat(compensationInput) > 0) {
                compensationValue = parseFloat(compensationInput);
            } else {
                compensationValue = 0;
            }
            document.getElementById('TotalCompensationValue').textContent = compensationValue.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });

            // AmountRequired
            var previousBalance = @Html.Raw(Json.Serialize(Model?.ContractSettlement?.CrCasRenterContractBasic5.CrCasRenterLessorAvailableBalance));
            var previousTotalContract = @Html.Raw(Json.Serialize(Model?.ContractSettlement.CrCasRenterContractBasicExpectedTotal));
            AmountRequired = TotalContract - parseFloat(previousTotalContract) - parseFloat(previousBalance) + compensationValue - ExpensesValue;
            console.log("AmountRequired", AmountRequired)
            if (AmountRequired < 0) {
                document.getElementById('RenterMoneyText').textContent = '@localizer["RenterMoneyText2"]'
                document.getElementById('AmountPayed').disabled = false;
            }
            else if (AmountRequired > 0) {
                document.getElementById('RenterMoneyText').textContent = '@localizer["RenterMoneyText1"]'
                document.getElementById('AmountPayed').disabled = false;
            }
            else {
                document.getElementById('AmountPayed').disabled = true;
            }
            console.log("AmountPayed", document.getElementById('AmountPayed').disabled)

            $("#ContractSettlement_AmountRequired").val(AmountRequired);
            document.getElementById('AmountRequired').textContent = Math.abs(AmountRequired).toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
        }
        function getAdditionalHoursValue() {
            // Additional Hours Value Total
            const TotalFreeHours = @Html.Raw(Json.Serialize(Model?.ContractSettlement?.CrCasRenterContractBasicTotalFreeHours));
            var AdditionalHourValue = @Html.Raw(Json.Serialize(Model?.ContractSettlement?.CrCasRenterContractBasicHourValue));
            var AdditionalHour = @Html.Raw(Json.Serialize(Model?.ContractSettlement?.CrCasRenterContractBasicHourMax));
            if (AdditionalHour > 0) {
                if (diff > 0 || (diff === 0 && diffMinutes > 0)) {
                    AdditionalHoursValueTotal = parseInt(AdditionalHour) * parseFloat(AdditionalHourValue);
                }
                else {
                    var HourAfterFreeHour = diffHours - TotalFreeHours;
                    console.log("HourAfterFreeHour", HourAfterFreeHour)
                    console.log("AdditionalHourValue", AdditionalHourValue)
                    console.log("diffHours", diffHours)
                    console.log("diffMinutes", diffMinutes)
                    if (HourAfterFreeHour >= 0 && diffMinutes > 0) {
                        AdditionalHoursValueTotal = (parseInt(HourAfterFreeHour) * parseFloat(AdditionalHourValue)) + (((parseFloat(AdditionalHourValue) * parseInt(diffMinutes)) / 60));
                        console.log("AdditionalHoursValueTotal", AdditionalHoursValueTotal)
                    }
                }
            }
            document.getElementById('ExtraHoursValue').textContent = AdditionalHoursValueTotal.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
            $("#ContractSettlement_MaxHours").val(AdditionalHour);
            $("#ContractSettlement_MaxMinutes").val(diffMinutes);
            $("#ContractSettlement_ExtraHoursValue").val(AdditionalHoursValueTotal);

        }
        function getAdditionalKmValue() {
            const KMValue = @Html.Raw(Json.Serialize(Model?.ContractSettlement?.CrCasRenterContractBasicKmValue));
            AdditionalKMValueTotal = parseInt(AdditionalKm) * parseFloat(KMValue);
            document.getElementById('ExtraKMsValue').textContent = AdditionalKMValueTotal.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
        }
    </script>
    <script>

        function CheckIfCanPayLessThanTotalAmount() {
            var userCashBranchAmount = @Html.Raw(Json.Serialize(userInfo?.CrMasUserBranchValidities?.FirstOrDefault(x => x.CrMasUserBranchValidityBranch == Model?.SelectedBranch).CrMasUserBranchValidityBranchCashAvailable));
            var AmountPayed = document.getElementById("AmountPayed").value;
            console.log("userCashBranchAmount", userCashBranchAmount)
            console.log("AmountPayed", AmountPayed)
            console.log("AmountRequired", AmountRequired)
            if (AmountRequired < 0) {
                if (parseFloat(userCashBranchAmount) < parseFloat(AmountPayed)) {
                    toastr.options = { "positionClass": '@localizer["toastPostion"]', };
                    toastr.error('@localizer["UserDontHaveCashToPay"]');
                    $("#AmountPayed").css({ "border": "2px solid red" });    //This For last Check When i submit Form
                    somethingIsNotOkay = false;
                }
                else {
                    $("#AmountPayed").css({ "border": "2px solid #faa64d" }); //This For last Check When i submit Form
                    somethingIsNotOkay = true;
                }
            }
            else {
                $("#AmountPayed").css({ "border": "2px solid #faa64d" }); //This For last Check When i submit Form
                somethingIsNotOkay = true;
            }
        }
        $(document).ready(function () {
            $("#AmountPayed").focusout(function () {
                var payed = document.getElementById('AmountPayed').value;
                var BranchCode = @Html.Raw(Json.Serialize(Model?.SelectedBranch));
                if (AmountRequired < 0) {
                    CheckIfCanPayLessThanTotalAmount();
                }
                if (AmountRequired > 0 && parseFloat(payed) > 0 && somethingIsNotOkay) {
                    document.getElementById('ContractSettlement_PaymentMethod').disabled = false;
                    // document.getElementById('ContractSettlement_PaymentMethod').selectedIndex = 0;
                    document.getElementById('ContractSettlement_SalesPoint').disabled = false;
                    document.getElementById('ContractSettlement_SalesPoint').selectedIndex = 0;
                }
                else if (AmountRequired < 0 && parseFloat(payed) > 0 && somethingIsNotOkay) {
                    CheckIfCanPayLessThanTotalAmount();
                    getSalesPoint("10", BranchCode);
                    document.getElementById('ContractSettlement_PaymentMethod').value = "10";
                    document.getElementById('ContractSettlement_PaymentMethod').disabled = true;

                }
                else {
                    document.getElementById('ContractSettlement_PaymentMethod').disabled = true;
                    document.getElementById('ContractSettlement_PaymentMethod').selectedIndex = 0;
                    document.getElementById('ContractSettlement_SalesPoint').disabled = true;
                    document.getElementById('ContractSettlement_SalesPoint').selectedIndex = 0;
                    $("#ContractSettlement_SalesPoint").empty();
                }
            })
        });
        $(document).ready(function () {
            $("#ContractSettlement_PaymentMethod").change(function () {
                var PaymentMethod = $("#ContractSettlement_PaymentMethod").val();
                var BranchCode = @Html.Raw(Json.Serialize(Model?.SelectedBranch));
                console.log(PaymentMethod);
                console.log("BranchCode", BranchCode);
                getSalesPoint(PaymentMethod, BranchCode);
            })
        });
        function getSalesPoint(PaymentMethod, BranchCode) {
            $.get("/BS/ContractSettlement/GetSalesPoint", { PaymentMethod: PaymentMethod, BranchCode: BranchCode }, function (data) {
                $("#ContractSettlement_SalesPoint").empty();
                console.log(data);
                if (data.type == "1" && data.salesPoints != null) {
                    $.each(data.salesPoints, function (index, row) {
                        if ("@requestCulture?.RequestCulture.UICulture.Name" == "en-US") {
                            $("#ContractSettlement_SalesPoint").append("<option  value= '" + row.crCasAccountSalesPointCode + "'>" + row.crCasAccountSalesPointEnName + "</option>")
                        }
                        else {
                            $("#ContractSettlement_SalesPoint").append("<option class='text-right' value= '" + row.crCasAccountSalesPointCode + "'>" + row.crCasAccountSalesPointArName + "</option>")
                        }
                    });
                }
                else if (data.type == "2" && data.accountBank != null) {
                    $.each(data.accountBank, function (index, row) {
                        if ("@requestCulture?.RequestCulture.UICulture.Name" == "en-US") {

                            $("#ContractSettlement_SalesPoint").append("<option value= '" + row.crCasAccountBankCode + "'>" + row.crCasAccountBankEnName + "</option>")
                        }
                        else {
                            $("#ContractSettlement_SalesPoint").append("<option class='text-right' value= '" + row.crCasAccountBankCode + "'>" + row.crCasAccountBankArName + "</option>")
                        }
                    });
                }

            });
        }
    </script>
    <script>
        const sendStaticImageToWhatsApp = async () => {
            const imageLessor = "@user.CrMasUserInformationLessorNavigation.CrMasLessorImage.CrMasLessorImageContractClosed";
            const imagePath = imageLessor.replace('~', '');
            const token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJudW1iZXIiOiJKYXNlcjExIiwic2VyaWFsIjoiMTk5ZmUzYjFlYjc2MjNlIiwiaWF0IjoxNzA3NzMxNjI4LCJleHAiOjE3OTQxMzE2Mjh9.O_4RW4vYAays1ZL7D-OlOQh6C5P5xVYrT3pZ2Oi9Yak"; // Your WhatsApp API token
            const callingKey = '@user.CrMasUserInformationCallingKey'; // Assuming this variable contains the calling key
            const mobileNo = '@user.CrMasUserInformationMobileNo'; // Assuming this variable contains the mobile number
            const phoneNumber = callingKey + mobileNo;
            const messageText = " "; // Replace with your message
            const contractNo = '@Html.Raw(Model.ContractSettlement?.CrCasRenterContractBasicNo)';

            try {
                // Read the image file as a Blob
                const responseImage = await fetch(imagePath);
                const blob = await responseImage.blob();
                // Prepare form data
                const formData = new FormData();
                formData.append("number", phoneNumber); // Append the recipient's phone number
                formData.append("message", messageText); // Append the message

                // Create a canvas element
                const canvas = document.createElement('canvas');
                const ctx = canvas.getContext('2d');

                // Create an image element
                const img = new Image();

                // When the image is loaded, draw it on the canvas
                img.onload = function () {
                    canvas.width = img.width;
                    canvas.height = img.height;
                    ctx.drawImage(img, 0, 0);

                    
                    const RenterArName = '@Html.Raw(Model.ContractSettlement?.CrCasRenterContractBasic5?.CrCasRenterLessorNavigation?.CrMasRenterInformationArName)';
                    const RenterEnName = '@Html.Raw(Model.ContractSettlement?.CrCasRenterContractBasic5?.CrCasRenterLessorNavigation?.CrMasRenterInformationEnName)';
                    ctx.font = "bold 9rem serif";
                    ctx.textAlign = "right";
                    ctx.fillStyle = "black";
                    ctx.fillText(RenterArName, canvas.width - 680, 1950);
                    //

                    ctx.textAlign = "left";
                    ctx.fillText(RenterEnName, canvas.width - 4000, 3050);
                    ctx.fillText(contractNo, canvas.width - 4400, 940);
                    
                    canvas.toBlob(async function (blob) {
                        formData.append("file", blob, "SettlementContractWhatUp.png"); // Append the modified image blob with a filename
                        const requestOptions = {
                            method: 'POST',
                            body: formData,
                            headers: {
                                'Authorization': `Bearer ${token}`
                            }
                        };
                        // Send the request to the API endpoint
                        const response = await fetch("https://business.enjazatik.com/api/v1/send-media", requestOptions);
                        if (response.ok) {
                            const result = await response.json();
                            console.log("SendImageResult", result);
                        } else {
                            const errorMessage = await response.text(); // Get the error message as plain text
                            console.log("SendImageError", errorMessage);
                        }
                        // createPdfAndSendToWhatsApp(contractNo, phoneNumber, token, blob);
                    }, 'image/png');
                };
                // Set the source of the image element
                img.src = URL.createObjectURL(blob);
            } catch (error) {
                console.log('SendImageError', error);
            }
        };
    </script>
    <script>
        // submit Form
        document.addEventListener('DOMContentLoaded', function () {
            // Get the form element
            var form = document.getElementById('SettlementForm');

            // Get the submit button
            var submitButton = document.getElementById('submitForm');

            // Add a click event listener to the submit button
            submitButton.addEventListener('click', function (event) {
                // Prevent the default form submission
                event.preventDefault();

                // Check if the form is valid and something is not okay
                if ($("#SettlementForm").valid()) {
                    // Submit the form
                    CheckIfCanPayLessThanTotalAmount();
                    if (somethingIsNotOkay) {
                        $('.main').show(); // Show the main container with fade effect
                        sendStaticImageToWhatsApp();
                        if ("@requestCulture?.RequestCulture.UICulture.Name" == "en-US") {
                            $("#language").val("en");
                        }
                        else {
                            $("#language").val("ar");
                        }
                        // setTimeout(function () {
                        //     document.getElementById('ContractSettlement_PaymentMethod').disabled = false;
                        //     document.getElementById('ContractSettlement_SalesPoint').disabled = false;
                        //     form.submit();
                        // }, 5000); // Adjust delay as needed (2000 milliseconds = 2 seconds)
                    }
                    else {
                        CheckIfCanPayLessThanTotalAmount();
                    }
                }
            });
        });
    </script>
    <script>
        function handleAmountPayed(input) {
            // Remove non-digit characters and additional decimal points
            input.value = input.value.replace(/[^0-9\.]/g, '');
            const decimalIndex = input.value.indexOf('.');
            // Limit to 9 digits before and after the decimal point
            if (decimalIndex !== -1) {
                const digitsBeforeDecimal = input.value.substring(0, decimalIndex);
                const digitsAfterDecimal = input.value.substring(decimalIndex + 1);

                // Limit to 2 digits after the decimal point
                input.value = digitsBeforeDecimal.substr(0, 7) + '.' + digitsAfterDecimal.substr(0, 2);

                // Remove additional decimal points
                if (input.value.indexOf('.', decimalIndex + 1) !== -1) {
                    const lastValidIndex = input.value.lastIndexOf('.');
                    input.value = input.value.substring(0, lastValidIndex) + input.value.substring(lastValidIndex + 1);
                }
            } else {
                // Limit to 7 digits before the decimal point
                input.value = input.value.substr(0, 7);
            }
        }
    </script>
    <script>
        // To decode some string
        function decodeHTMLEntities(text) {
            var textArea = document.createElement("textarea");
            textArea.innerHTML = text;
            return textArea.value;
        }
        // Function to format Hijri date
        function formatHijriDate(date) {
            const options = { weekday: 'long', day: 'numeric', year: 'numeric', month: 'long', calendar: 'islamic-umalqura' };
            return date.toLocaleDateString('ar-SA', options).replace(/هـ/g, ''); // Remove "هـ" suffix
        }
        function formatHijriEnDate(date) {
            const options = { weekday: 'long', day: 'numeric', year: 'numeric', month: 'long', calendar: 'islamic-umalqura' };
            return date.toLocaleDateString('en-US-u-ca-islamic-umalqura', options).replace(/AH/g, ''); // Remove "AH" suffix
        }
    </script>

}