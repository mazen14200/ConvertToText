@using Bnan.Core.Extensions
@using Bnan.Ui.ViewModels.CAS

@model CarContractVM
@inject IViewLocalizer localizer
@inject IOptions<RequestLocalizationOptions> options
@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    ViewData["returnUrl"] = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}
@* 
  "RenterInformationCode": "Code",
  "CarContractId": "ID",
  "RenterInformationNationality": "Nationality",
 
 *@


@if (requestCulture?.RequestCulture.UICulture.Name == "en-US")
{
    
       <div class="col-sm-12">
        @* For-scrolling *@
        <table id="basic-datatable" class="table table-bordered dt-responsive nowrap dataTable no-footer dtr-inline table-hover" role="grid" aria-describedby="basic-datatable_info" style="position: relative; width: 1166px; ">

            <thead>
                <tr role="row">
                    <th id="_Nc" aria-sort="ascending" aria-label="Name: activate to sort column descending">@localizer["No"]</th>
                    <th id="_Nc" aria-sort="ascending" aria-label="Name: activate to sort column descending">@localizer["CarContractId"]</th>
                    <th style="text-align:start" aria-label="Position: activate to sort column ascending">@localizer["RenterInformationName"]</th>
                    <th style="text-align:start" aria-label="Position: activate to sort column ascending">@localizer["LastDateContract"]</th>
                    <th id="_Nc" aria-label="Position: activate to sort column ascending">@localizer["Contract_Value"]</th>
                    <th id="_Nc" aria-label="Position: activate to sort column ascending">@localizer["Contract_Count"]</th>
                    <th id="_Nc" aria-label="Position: activate to sort column ascending">@localizer["Days_Count"]</th>
                    <th id="_Nc" aria-label="Position: activate to sort column ascending">@localizer["KM_Count"]</th>
                    <th style="text-align:start" data-orderable="false" >@localizer["Status"]</th>
                </tr>
            </thead>
            <tbody>

                @{
                    int no = 1;
                }
                @foreach (var item in Model.ContractBasic_Filtered)
                {

                    @*<tr onclick="location.href='@Url.Action("Edit", "CarContract", new { id = item.CrCasRenterContractBasic4.CrCasRenterPrivateCarInformationId })'" style="cursor:pointer;color:red">*@
                    <tr onclick="location.href='@Url.Action("Edit", "CarContract", new { id = item.CrCasRenterContractBasicCarSerailNo })'">
                        <td id="_Nc">@no</td>
                        <td id="_Nc">@item.CrCasRenterContractBasicCarSerailNo</td>
                        @{
                            var singleCar = Model.crCasCarInformation.FirstOrDefault(x => x.CrCasCarInformationSerailNo == item.CrCasRenterContractBasicCarSerailNo);

                            <td style="text-align:start">@singleCar.CrCasCarInformationConcatenateEnName</td>
                            <td style="text-align:start">@Model.crCasRenterContractBasics.Where(x=>x.CrCasRenterContractBasicCarSerailNo == item.CrCasRenterContractBasicCarSerailNo).Max(x=>x.CrCasRenterContractBasicIssuedDate)?.ToString("dd/MM/yyyy")</td>


                            foreach (var ss in Model.contracts_Counts)
                            {
                                if (ss[0] == item.CrCasRenterContractBasicCarSerailNo)
                                {
                                    var singleDataFromCountList = ss;

                                    <td id="_Nc">@decimal.Parse(singleDataFromCountList[2]).ToString("N2",CultureInfo.InvariantCulture)</td>
                                <td id="_Nc">@singleDataFromCountList[1]</td>

                                <td id="_Nc"></td>
                                }
                            }

                            <td id="_Nc">@singleCar.CrCasCarInformationCurrentMeter?.ToString("N2",CultureInfo.InvariantCulture)</td>


                            <td style="text-align:start">

                                @if (@singleCar.CrCasCarInformationStatus == Status.Active)
                                {
                                    @localizer["Active"]
                                }
                                else if (@singleCar.CrCasCarInformationStatus == Status.Rented)
                                {
                                    @localizer["Car_Rented"]
                                }
                                else if (@singleCar.CrCasCarInformationStatus == Status.Hold)
                                {
                                    @localizer["Hold"]
                                }
                                else if (@singleCar.CrCasCarInformationStatus == Status.Deleted)
                                {
                                    @localizer["Deleted"]
                                }
                                else
                                {

                                }
                            </td>
                     }   
                        </tr>
                    
                    
                    no++;
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="col-sm-12">
        @* For-scrolling *@
        <table id="basic-datatable" class="table table-bordered dt-responsive nowrap dataTable no-footer dtr-inline table-hover" role="grid" aria-describedby="basic-datatable_info" style="position: relative; width: 1166px; ">
            <thead>
                <tr role="row">
                    <th id="_Nc" aria-sort="ascending" aria-label="Name: activate to sort column descending">@localizer["No"]</th>
                    <th id="_Nc" aria-sort="ascending" aria-label="Name: activate to sort column descending">@localizer["CarContractId"]</th>
                    <th style="text-align:start" aria-label="Position: activate to sort column ascending">@localizer["RenterInformationName"]</th>
                    <th style="text-align:start" aria-label="Position: activate to sort column ascending">@localizer["LastDateContract"]</th>
                    <th id="_Nc" aria-label="Position: activate to sort column ascending">@localizer["Contract_Value"]</th>
                    <th id="_Nc" aria-label="Position: activate to sort column ascending">@localizer["Contract_Count"]</th>
                    <th id="_Nc" aria-label="Position: activate to sort column ascending">@localizer["Days_Count"]</th>
                    <th id="_Nc" aria-label="Position: activate to sort column ascending">@localizer["KM_Count"]</th>
                    <th style="text-align:start" data-orderable="false">@localizer["Status"]</th>
                </tr>
            </thead>
            <tbody>

                @{
                    int no = 1;
                }
                @foreach (var item in Model.ContractBasic_Filtered)
                {

                    @*<tr onclick="location.href='@Url.Action("Edit", "CarContract", new { id = item.CrCasRenterContractBasic4.CrCasRenterPrivateCarInformationId })'" style="cursor:pointer;color:red">*@
                    <tr onclick="location.href='@Url.Action("Edit", "CarContract", new { id = item.CrCasRenterContractBasicCarSerailNo })'">
                        <td id="_Nc">&emsp; @no</td>
                        <td id="_Nc">&emsp; @item.CrCasRenterContractBasicCarSerailNo</td>
                        @{
                            var singleCar = Model.crCasCarInformation.FirstOrDefault(x => x.CrCasCarInformationSerailNo == item.CrCasRenterContractBasicCarSerailNo);

                            <td style="text-align:start">@singleCar.CrCasCarInformationConcatenateArName</td>
                            <td style="text-align:start">@Model.crCasRenterContractBasics.Where(x=>x.CrCasRenterContractBasicCarSerailNo == item.CrCasRenterContractBasicCarSerailNo).Max(x=>x.CrCasRenterContractBasicIssuedDate)?.ToString("dd/MM/yyyy")</td>


                            foreach (var ss in Model.contracts_Counts)
                            {
                                if (ss[0] == item.CrCasRenterContractBasicCarSerailNo)
                                {
                                    var singleDataFromCountList = ss;

                                    <td id="_Nc">&emsp; @decimal.Parse(singleDataFromCountList[2]).ToString("N2",CultureInfo.InvariantCulture)</td>
                                    <td id="_Nc">&emsp; @singleDataFromCountList[1]</td>

                                    <td id="_Nc">&emsp; </td>
                                }
                            }

                            <td id="_Nc">&emsp; @singleCar.CrCasCarInformationCurrentMeter?.ToString("N2",CultureInfo.InvariantCulture)</td>


                            <td style="text-align:start">

                                @if (@singleCar.CrCasCarInformationStatus == Status.Active)
                                {
                                    @localizer["Active"]
                                }
                                else if (@singleCar.CrCasCarInformationStatus == Status.Rented)
                                {
                                    @localizer["Car_Rented"]
                                }
                                else if (@singleCar.CrCasCarInformationStatus == Status.Hold)
                                {
                                    @localizer["Hold"]
                                }
                                else if (@singleCar.CrCasCarInformationStatus == Status.Deleted)
                                {
                                    @localizer["Deleted"]
                                }
                                else
                                {

                                }
                            </td>
                        }
                    </tr>

                    no++;
                }
            </tbody>
        </table>
    </div>
}