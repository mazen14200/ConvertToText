

@using Bnan.Ui.ViewModels.CAS
@using Bnan.Core.Extensions
@model CarContractVM
@inject IViewLocalizer localizer
@inject IOptions<RequestLocalizationOptions> options
@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    ViewData["returnUrl"] = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}
<style>

    div.scroll {
        /*        background-color: #fed9ff;
                    width: 600px;*/
        /*height: 150px;*/
        overflow-x: hidden;
        overflow-y: auto;
        text-align: center;
        /*padding: 20px;*/
        position: relative;
        /*overflow: auto;*/
        max-height: 40vh;
        width: 100%;
    }


    th.scroll_1 {
        top: 0px;
        position: sticky;
        background-color: #E4F3F9;
    }


    ::-webkit-scrollbar {
        display: block;
        width: 15px;
        opacity: 0;
    }


    ::-webkit-scrollbar-thumb {
        background-color: gray;
        border-right: none;
        border-left: none;
    }

    ::-webkit-scrollbar-track {
        /*box-shadow: inset 0 0 5px #CBD9DE;*/
        /*border-radius: 2px;*/
        /*background-color:transparent;*/
        background-color: #E4F3F9;
    }

    ::-webkit-scrollbar-track-piece:end {
        background: transparent;
        background-color: lightgray;
        margin-bottom: 0px;
    }

    ::-webkit-scrollbar-track-piece:start {
        background: transparent;
        background-color: lightgray;
        margin-top: 50px;
    }

</style>

<button onload="ChangeScroll()" hidden> click</button>
@if (requestCulture?.RequestCulture.UICulture.Name == "en-US")
{

    <div class="col-sm-12 scroll">
        @* For-scrolling *@
        <table id="basic-datatable2" class="table table-bordered dt-responsive nowrap w-100 no-footer dtr-inline table-hover" role="grid" aria-describedby="basic-datatable2_info" style="position: relative; width: 1166px; ">

            <div>
                <tr role="row">
                    <th class="scroll_1" id="_Nc" aria-sort="ascending" aria-label="Name: activate to sort column descending">@localizer["No"]</th>
                    <th class="scroll_1" id="_Nc" aria-sort="ascending" aria-label="Name: activate to sort column descending">@localizer["RenterContractId"]</th>
                <th class="scroll_1" style="text-align:start" aria-label="Position: activate to sort column ascending">@localizer["Start_Contract"]</th>
                <th class="scroll_1" style="text-align:start" aria-label="Position: activate to sort column ascending">@localizer["End_Contract"]</th>
                <th class="scroll_1" style="text-align:start" aria-label="Position: activate to sort column ascending">@localizer["Renter_Name"]</th>
                    <th class="scroll_1" aria-label="Position: activate to sort column ascending">@localizer["Contract_Value"]</th>
                <th class="scroll_1" style="text-align:start" aria-label="Position: activate to sort column ascending">@localizer["Status"]</th>
                    <th class="scroll_1" aria-label="Position: activate to sort column ascending">@localizer["Contract"]</th>
                </tr>
            </div>
            <div >
            <tbody>

                    @{
                        int no = 1;
                    }
                    @foreach (var item in Model.crCasRenterContractBasics)
                    {
                        @*<tr onclick="location.href='@Url.Action("Edit", "RenterContract", new { id = item.CrCasRenterLessorId })'">*@
                    <tr>
                        <td id="_Nc">@no</td>

                            @if (item.CrCasRenterContractBasicCopy > 0)
                            {
                        <td id="_Nc">@item.CrCasRenterContractBasicNo <em style='color: red;font-style:normal'> &ensp;(@item.CrCasRenterContractBasicCopy)</em></td>
                            }
                            else
                            {
                        <td id="_Nc">@item.CrCasRenterContractBasicNo</td>
                            }

                    <td style="text-align:start">@item.CrCasRenterContractBasicExpectedStartDate?.ToString("dd/MM/yyyy")</td>
                    <td style="text-align:start">@item.CrCasRenterContractBasicExpectedEndDate?.ToString("dd/MM/yyyy")</td>
                    <td style="text-align:start">
                                @item.CrCasRenterContractBasic5?.CrCasRenterLessorNavigation.CrMasRenterInformationEnName
                        </td>

                        <td id="_Nc">
                            @item.CrCasRenterContractBasicExpectedTotal?.ToString("N2",CultureInfo.InvariantCulture);
                        </td>
                    <td style="text-align:start">
                                @if (@item.CrCasRenterContractBasicStatus == @Status.Closed)
                                {
                                    @localizer["Closed"]
                                }
                                else if (@item.CrCasRenterContractBasicStatus == @Status.Cancel)
                                {
                                    @localizer["Canceled"]
                                }
                                else if (@item.CrCasRenterContractBasicStatus == @Status.Active)
                                {
                                    @localizer["Standing"]
                                }
                                else if (@item.CrCasRenterContractBasicStatus == @Status.Extension)
                                {
                                    @localizer["Extended"]
                                }
                                else if (@item.CrCasRenterContractBasicStatus == Status.Rented)
                                {
                                    @localizer["Rented_n"]
                                }
                                else if (@item.CrCasRenterContractBasicStatus == Status.Hold)
                                {
                                    @localizer["Hold"]
                                }
                                else if (@item.CrCasRenterContractBasicStatus == Status.Deleted)
                                {
                                    @localizer["Deleted"]
                                }
                                else
                                {

                                }
                        </td>


                            @{
                                var Link_pdf = item.CrCasRenterContractBasicEnPdfFile;
                                var Target_pdf = "#";
                                if (Link_pdf?.Count() > 2)
                                {
                                    Link_pdf = Link_pdf.Replace("~", "");
                                    Target_pdf = "_blank";
                                }
                            }

                    <td id="_Nc">
                        <a href="@Link_pdf" target="@Target_pdf" class="pdf-link"><img src="/BranchSys/Pages/img/Rectangle 193.png" alt="Link Pdf"></a>
                    </td>
                    </tr>

                        no++;
                    }
            </tbody>
            </div>
            
        </table>
    </div>
}
else
{
    <div class="col-sm-12 scroll ">
        @* For-scrolling *@
        <table id="basic-datatable2" class="table table-bordered dt-responsive nowrap w-100 no-footer dtr-inline table-hover" role="grid" aria-describedby="basic-datatable2_info" style="position: relative; width: 1166px; ">
            <div >
                <tr role="row">
                <th class="scroll_1" id="_Nc" aria-sort="ascending" aria-label="Name: activate to sort column descending">@localizer["No"]</th>
                <th class="scroll_1" id="_Nc" aria-sort="ascending" aria-label="Name: activate to sort column descending">@localizer["RenterContractId"]</th>
                <th class="scroll_1" style="text-align:start" aria-label="Position: activate to sort column ascending">@localizer["Start_Contract"]</th>
                <th class="scroll_1" style="text-align:start" aria-label="Position: activate to sort column ascending">@localizer["End_Contract"]</th>
                <th class="scroll_1" style="text-align:start" aria-label="Position: activate to sort column ascending">@localizer["Renter_Name"]</th>
                <th class="scroll_1" aria-label="Position: activate to sort column ascending">@localizer["Contract_Value"]</th>
                <th class="scroll_1" style="text-align:start" aria-label="Position: activate to sort column ascending">@localizer["Status"]</th>
                <th class="scroll_1" aria-label="Position: activate to sort column ascending">@localizer["Contract"]</th>
                </tr>
            </div>
            <tbody >

                @{
                    int no = 1;
                }

                    
                
                @foreach (var item in Model.crCasRenterContractBasics)
                {
                        @*<tr onclick="location.href='@Url.Action("Edit", "RenterContract", new { id = item.CrCasRenterLessorId })'">*@
                        <tr>
                        <td id="_Nc">@no</td>

                        @if (item.CrCasRenterContractBasicCopy > 0)
                        {
                    <td id="_Nc">@item.CrCasRenterContractBasicNo <em style='color: red;font-style:normal'> &ensp;(@item.CrCasRenterContractBasicCopy)</em></td>
                        }
                        else
                        {
                    <td id="_Nc">@item.CrCasRenterContractBasicNo</td>
                        }

                <td style="text-align:start">@item.CrCasRenterContractBasicExpectedStartDate?.ToString("dd/MM/yyyy")</td>
                <td style="text-align:start">@item.CrCasRenterContractBasicExpectedEndDate?.ToString("dd/MM/yyyy")</td>
                <td style="text-align:start">
                            @item.CrCasRenterContractBasic5?.CrCasRenterLessorNavigation.CrMasRenterInformationArName
                        </td>

                        <td id="_Nc">
                            @item.CrCasRenterContractBasicExpectedTotal?.ToString("N2",CultureInfo.InvariantCulture)
                        </td>

                <td style="text-align:start">

                                @if (@item.CrCasRenterContractBasicStatus == @Status.Closed)
                                {
                                    @localizer["Closed"]
                                }
                                else if (@item.CrCasRenterContractBasicStatus == @Status.Cancel)
                                {
                                    @localizer["Canceled"]
                                }
                                else if (@item.CrCasRenterContractBasicStatus == @Status.Active)
                                {
                                    @localizer["Standing"]
                                }
                                else if (@item.CrCasRenterContractBasicStatus == @Status.Extension)
                                {
                                    @localizer["Extended"]
                                }
                                else if (@item.CrCasRenterContractBasicStatus == Status.Rented)
                                {
                                @localizer["Rented_n"]
                                }
                                else if (@item.CrCasRenterContractBasicStatus == Status.Hold)
                                {
                                    @localizer["Hold"]
                                }
                                else if (@item.CrCasRenterContractBasicStatus == Status.Deleted)
                                {
                                    @localizer["Deleted"]
                                }
                                else
                                {

                                }
                            </td>


                        @{
                            var Link_pdf = item.CrCasRenterContractBasicArPdfFile;
                            var Target_pdf = "#";
                            if (Link_pdf?.Count() > 2)
                            {
                                Link_pdf = Link_pdf.Replace("~", "");
                                Target_pdf = "_blank";
                            }
                        }

                <td id="_Nc">
                    <a href="@Link_pdf" target="@Target_pdf" class="pdf-link"><img src="/BranchSys/Pages/img/Rectangle 193.png" alt="Link Pdf"></a>
                </td>
                
                @*<td id="_Nc">@item.CrCasRenterContractBasicExpectedTotal</td>*@
                        </tr>
                    
                    no++;
                }

            </tbody>
        </table>
    </div>
}

@section scripts {

    <script>
        function ChangeScroll(){
            var el = document.getElementsByClassName("dataTables_scrollBody");
            el.style.max-height = "20vh";
        }

    </script>
    <script>
        function GetUpdatedValues(status) {
            //var code = document.getElementById("CrMasContractCompanyNo").value;
            var _max = document.getElementById("endDateInput").value;
            var _mini = document.getElementById("startDateInput").value;
            if (status == "All") {
                const yesBtn = document.getElementById('customRadioAll');

                // ✅ Set the radio button to checked
                yesBtn.checked = true;
            }
            //var status = $("input[name='customRadio']").val();
            $.ajax({
                type: "GET",
                data: { _max: _max, _mini: _mini, status: status },
                // url: "@Url.Action("GetAllContractsByDate_status", "ReportContract", new { Area = "CAS" })",
                url: '/CAS/ReportContract/GetAllContractsByDate_status',

                success: function (result) {
                    console.log(result);
                    $('#dataTableR1').html(result);
                    set_basic_datatable();
                }
            });
        }

        document.addEventListener("DOMContentLoaded", function () {
            var startDate = document.getElementById('startDateInput');
            var endDate = document.getElementById('endDateInput');

            startDate.addEventListener('change', function () {
                console.log('Start date changed');
                GetUpdatedValues("All");
                // Handle logic for start date change here
            });

            endDate.addEventListener('change', function () {
                console.log('End date changed');
                GetUpdatedValues("All");
                // Handle logic for end date change here
            });
        });
    </script>
    @*Get Renter contract Using filter*@
    <script>
        //get Renter contract By Status function
        function GetRenterContractFitler(status) {
            $.ajax({
                type: "GET",
                data: {
                    status: status
                },
                url: "@Url.Action("GetRenterContractsByStatus", "ReportContract", new { Area = "CAS" })",
                success: function (response) {
                    $("#dataTableR1").html(response);
                    set_basic_datatable();
                },
            })
        }

        //on Click Filter Radio Button GetLessorsByStatus
        $("input[name='customRadio']").on("click", function () {
            // Clear the value from the search input
            $("#top-search").val("");
            //GetRenterContractFitler($(this).val())
            GetUpdatedValues($(this).val());
        })
    </script>
    }