@using Bnan.Core.Extensions
@model Bnan.Ui.ViewModels.CAS.AccountBankVM

@inject IViewLocalizer localizer
@{
    var requestCulture1 = Context.Features.Get<IRequestCultureFeature>();
    var requestCulture2 = Context.Features.Get<IRequestCultureFeature>();

       ViewData["returnUrl"] = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";   ViewData["returnUrl"] = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}

@{
    ViewData["Page-title"] = localizer["Edit AccountBank Data"];
    ViewData["Page-Hint"] = localizer["Edit AccountBank Hint"];
}
<style>
    .row {
        align-items: center;
    }
</style>
<title>@ViewData["Title"]</title>

<div class="sub-container-form">
    <form class="needs-validation" novalidate asp-area="CAS" asp-controller="AccountBank" asp-action="Edit" method="post">
        <div class="form-contain">
            <input type="text" class="form-control" asp-for="CrCasAccountBankCode" id="AccountBankCode" maxlength="100" width="80%" readonly hidden />
            <input type="text" class="form-control" asp-for="CrCasAccountBankStatus" id="AccountBankStatus" maxlength="100" width="80%" readonly hidden />
            <input type="text" class="form-control" asp-for="CrCasAccountBankArName" id="CrCasAccountBankArName" maxlength="100" width="80%" readonly hidden />
            <input type="text" class="form-control" asp-for="CrCasAccountBankEnName" id="CrCasAccountBankEnName" maxlength="100" width="80%" readonly hidden />
            <input type="text" class="form-control" asp-for="CrCasAccountBankNo" id="CrCasAccountBankNo" maxlength="100" width="80%" readonly hidden />
            <input type="text" class="form-control" asp-for="CrCasAccountBankLessor" id="CrCasAccountBankLessor" maxlength="100" width="80%" readonly hidden />
            <input type="text" class="form-control" asp-for="CrCasAccountBankSerail" id="CrCasAccountBankSerail" maxlength="100" width="80%" readonly hidden />
            <input type="text" class="form-control" id="SalesPointCount" value="@ViewBag.SalesPointCount" hidden />

            @if (requestCulture1.RequestCulture.UICulture.Name != "en-US")
            {
                @*Bank name arabic*@
                <div class="row mt-2">
                    <div class="col-md-1">
                        <label class="form-label" for="BankNameAr">@localizer["BankNameArAccount"]</label>
                    </div>
                    <div class="col-md-4">
                        <input type="text" class="form-control" asp-for="CrCasBankArName" id="CrCasBankArName" maxlength="50" width="80%" value="@ViewBag.BankNameAr" readonly />
                        <div style="margin-top:2px">
                            <div style="height: 1.0em">
                                <span asp-validation-for="@Model.CrCasBankArName" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                @*Bank name English*@
                <div class="row mt-2">
                    <div class="col-md-1">
                        <label class="form-label" for="BankNameEn">@localizer["BankNameEnAccount"]</label>
                    </div>
                    <div class="col-md-4">
                        <input type="text" class="form-control" asp-for="CrCasBankEnName" id="CrCasBankEnName" maxlength="100" width="80%" value="@ViewBag.BankNameEn" readonly />
                        <div style="margin-top:2px">
                            <div style="height: 1.0em">
                                <span asp-validation-for="@Model.CrCasBankEnName" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>
            }

            @*IBank name arabic*@
            <div class="row mt-2">
                <div class="col-md-1">
                    <label class="form-label" for="CrCasAccountBankIban">@localizer["AccountBankCode"]</label>
                </div>
                <div class="col-md-4">
                    <input type="text" class="form-control" asp-for="CrCasAccountBankIban" id="CrCasAccountBankIban" maxlength="100" width="80%" readonly />
                    <div style="margin-top:2px">
                        <div style="height: 1.0em">
                            <span asp-validation-for="@Model.CrCasAccountBankIban" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>
            @if (requestCulture2.RequestCulture.UICulture.Name != "en-US")
            {
                @*AccountBank name arabic*@
                <div class="row mt-2">
                    <div class="col-md-1">
                        <label class="form-label" for="AccountBankNameAr">@localizer["AccountBankName"]</label>
                    </div>
                    <div class="col-md-4">
                        <input type="text" class="form-control" asp-for="CrCasAccountBankArName" id="AccountBankNameAr" maxlength="50" width="80%" data-val-required="@localizer["requiredFiled"]" oninput="this.value=this.value.replace(/[^\u0600-\u06FF\ufb50-\ufdff\ufe70-\ufeff\s]/g, '')" readonly />
                        <div style="margin-top:2px">
                            <div style="height: 1.0em">
                                <span asp-validation-for="@Model.CrCasAccountBankArName" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {

                @*AccountBank name English*@
                <div class="row mt-2">
                    <div class="col-md-1">
                        <label class="form-label" for="AccountBankNameEn">@localizer["AccountBankName"]</label>
                    </div>
                    <div class="col-md-4">
                        <input type="text" class="form-control" asp-for="CrCasAccountBankEnName" data-val-required="@localizer["requiredFiled"]" maxlength="50" id="AccountBankNameEn" width="80%" oninput="this.value = this.value.replace(/[^a-zA-Z ]/g, '')" readonly />
                        <div style="margin-top:2px">
                            <div style="height: 1.0em">
                                <span asp-validation-for="@Model.CrCasAccountBankEnName" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>
            }
            @*reasons*@
            <div class="row mt-2">
                <div class="col-md-1">
                    <label class="form-label" for="AccountBankReasons">@localizer["reasons"]</label>
                </div>
                <div class="col-md-7">
                    <input type="text" class="form-control" asp-for="CrCasAccountBankReasons" maxlength="100" id="AccountBankReasons" width="80%">
                    <div style="margin-top:2px">
                        <div style="height: 1.0em">
                            <span asp-validation-for="@Model.CrCasAccountBankReasons" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @Html.ValidationMessage("NoCHanged", null, new { @class = "text-danger" })

        <div class="mt-4" id="buttonContainer">

            <button type="submit" id="saveEdit" class="btn btn-primary ms-1">@localizer["Save"]</button>

            @if (Model.CrCasAccountBankStatus == "A")
            {
                <a type="button" class="btn btn-primary ms-1" data-bs-toggle="modal" data-error="@Status.Hold" data-bs-targett="#centermodalhold">
                    @localizer["Hold"]
                </a>
                <a type="button" class="btn btn-primary ms-1" data-bs-toggle="modal" data-error="@Status.Deleted" data-bs-targett="#centermodalDelete">
                    @localizer["Delete"]
                </a>
            }
            else if (Model.CrCasAccountBankStatus == "H")
            {
                <a type="button" class="btn btn-primary ms-1" data-bs-toggle="modal" data-error="@Status.UnHold" data-bs-targett="#centermodalRHold">
                    @localizer["ReactiveHold"]
                </a>
                <a type="button" class="btn btn-primary ms-1" data-bs-toggle="modal" data-error="@Status.Deleted" data-bs-targett="#centermodalDelete">
                    @localizer["Delete"]
                </a>
            }
            else if (Model.CrCasAccountBankStatus == "D")
            {
                <a type="button" class="btn btn-primary ms-1" data-bs-toggle="modal" data-error="@Status.Hold" data-bs-targett="#centermodalhold">
                    @localizer["Hold"]
                </a>
                <a type="button" class="btn btn-primary ms-1" data-bs-toggle="modal" data-error="@Status.UnDeleted" data-bs-targett="#centermodalRDelete">
                    @localizer["ReactiveDelete"]
                </a>
            }

            <a type="button" class="btn btn-danger ms-2" asp-area="CAS" asp-controller="AccountBank" asp-action="Index">
                @localizer["Back"]
            </a>
        </div>
    </form>
</div>


<!-- MOdel-->
<!-- Reactive Hold AccountBank MOdel-->
<div class="modal fade" id="centermodalRHold" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body">
                <h4>@localizer["SureToRetriveHoldOwner"]</h4>
                <p>@localizer["HintSureToRetriveHAccountBank"]</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light" data-bs-dismiss="modal">@localizer["Cancel"]</button>
                <button type="button" id="retriveUserButtonH" class="btn btn-primary">@localizer["Okay"]</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<!-- Reactive Delete AccountBank MOdel-->
<div class="modal fade" id="centermodalRDelete" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">

            <div class="modal-body">
                <h4>@localizer["SureToRetriveDelete"]</h4>
                <p>@localizer["HintSureToRetriveDAccountBank"]</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light" data-bs-dismiss="modal">@localizer["Cancel"]</button>
                <button type="button" id="retriveUserButtonD" class="btn btn-primary">@localizer["Okay"]</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<!-- Delete AccountBank Modal-->
<div class="modal fade" id="centermodalDelete" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">

            <div class="modal-body">
                <h4>@localizer["SureTodelete"]</h4>
                <p> @localizer["HintSureTodeleteAccountBank"]</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light" data-bs-dismiss="modal">@localizer["Cancel"]</button>
                <button type="button" id="deleteUserButton" class="btn btn-primary">@localizer["Okay"]</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<!-- Hold Lessor MOdel-->
<div class="modal fade" id="centermodalhold" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">

            <div class="modal-body">
                <h4>@localizer["SureToHold"]</h4>
                <p> @localizer["HintSureToHoldAccountBank"]</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light" data-bs-dismiss="modal">@localizer["Cancel"]</button>
                <button type="button" id="holdUserButton" class="btn btn-primary">@localizer["Okay"]</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        function updateUserStatus(status) {
            var code = document.getElementById("AccountBankCode").value;
            $.ajax({
                type: "POST",
                url: "/CAS/AccountBank/EditStatus",
                data: { status: status, code: code },
                success: function (result) {
                    $('.modal').modal('hide');
                    window.location.href = "/CAS/AccountBank/Index";
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }

        // Event listener for delete Lessor button
        $('#deleteUserButton').click(function () {
            updateUserStatus('D');
        });

        // Event listener for hold Lessor button
        $('#holdUserButton').click(function () {
            updateUserStatus('H');
        });

        // Event listener for retrieve Lessor button
        $('#retriveUserButtonD').click(function () {
            updateUserStatus('Reactivate');
        });

        $('#retriveUserButtonH').click(function () {
            updateUserStatus('Reactivate');
        });

        $("#buttonContainer a").on("click", function (event) {
            var status = $(this).attr("data-error")
            var Modal = $(this).attr("data-bs-targett")
            var salesCount = $("#SalesPointCount").val();
            if (status == "D") {
                if(salesCount>=1){
                    toastr.options = { "positionClass": '@localizer["toastPostion"]', };
                    toastr.error('@localizer["toastMessageAccountHaveSalesPoint"]');
                }
                else{
                    CheckValidation('2207003', status).done(function (data) {
                        if (data) $(Modal).modal('show');
                    });
                }
            
            }
            else{
                CheckValidation('2207003', status).done(function (data) {
                if (data) $(Modal).modal('show');
                });
            }
            
        })

        $("#saveEdit").on("click", function (event) {
            event.preventDefault();
            CheckValidation('2207003', '@Status.Save').done(function (data) {
                if (data) {
                    $('form').submit();
                }
            });
        })
    </script>
    <script>
        function validateInput(event, inId, InEr, No) {
            event.target.value = event.target.value.replace(/[^0-9]/g, '');

            const inputElement = document.getElementById(inId);
            const errorMessageElement = document.getElementById(InEr);

            const inputValue = inputElement.value;
            const isValid = inputValue.startsWith(No);

            if (!isValid) {
                errorMessageElement.textContent = errorMessageElement.getAttribute('data-val-err');
                inputElement.value = "";
            } else {
                errorMessageElement.textContent = '';
            }
        }
    </script>
}

