

@using Bnan.Ui.ViewModels.CAS
@using Bnan.Core.Extensions
@model Bnan.Ui.ViewModels.CAS.RenterLessorInformationVM


@inject IViewLocalizer localizer

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    ViewData["returnUrl"] = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
    ViewData["Page-title"] = localizer["Edit RenterLessorInformation Data"];
    ViewData["Page-Hint"] = localizer["Edit RenterLessorInformation Hint"];
}

<title>@ViewData["Title"]</title>

<style>

    #LessorInfoEmailWhatisapp, #LessorMobilePhone, #LessorCallFree {
        width: 101%;
    }

    .text-danger {
        white-space: nowrap;
    }

    .file-upload {
        width: 100%;
        margin: 0 auto;
        padding: 20px;
    }

    .file-upload-btn {
        width: 154px;
        margin: 0;
        color: #fff;
        background: #727cf5;
        border: none;
        padding: 10px;
        border-radius: 4px;
        border-bottom: 4px solid #727cf5;
        transition: all .2s ease;
        outline: none;
        text-transform: uppercase;
        font-weight: 700;
    }

        .file-upload-btn:hover {
            background: #5661e3;
            color: #ffffff;
            transition: all .2s ease;
            cursor: pointer;
        }

    .file-upload-input-picture, .file-upload-input-signature {
        position: absolute;
        margin: 0;
        padding: 0;
        width: 200px;
        height: 200px;
        max-height: 200px;
        max-width: 200px;
        outline: none;
        opacity: 0;
        cursor: pointer;
    }

    .image-upload-wrap {
        height: 180px;
        width: 154px;
        margin-top: 5px;
        border: 4px dashed rgb(231, 231, 231);
        position: relative;
        display: none;
    }

        .image-dropping,
        .image-upload-wrap:hover {
            background-color: rgb(231, 231, 231);
            border: 4px dashed #ffffff;
        }

    .image-title-wrap {
        color: #222;
        width: 154px;
    }

    .drag-text {
        text-align: center;
    }

        .drag-text h3 {
            font-weight: 100;
            text-transform: uppercase;
            padding: 60px 0;
            font-size: 17px
        }

    .file-upload-image {
        height: 145px;
        width: 154px;
        margin-top: 5px;
        margin-bottom: 5px;
        padding: 20px;
        border: .5px solid rgb(231, 231, 231);
    }

    .remove-image {
        margin: 0;
        max-height: 200px;
        max-width: 200px;
        width: 100%;
        color: #fff;
        background: #fa5c7c;
        border: none;
        padding: 10px;
        border-radius: 4px;
        border-bottom: 4px solid #fa5c7c;
        transition: all .2s ease;
        outline: none;
        text-transform: uppercase;
        font-weight: 700;
    }

    .image-upload-wrap {
        display: none
    }

    .file-upload-content {
        display: block
    }

    .remove-image:hover {
        background: #f35474;
        color: #ffffff;
        transition: all .2s ease;
        cursor: pointer;
    }



    @@media (max-width: 1050px) {
        #RenterLessorInformationSigntureImage {
            position: absolute;
            top: 145%;
            right: 5%;
        }
    }

    @@media (max-width: 767px) {
        #RenterLessorInformationSigntureImage {
            position: absolute;
            top: 330%;
            right: 30%;
        }
    }
</style>

@if (requestCulture.RequestCulture.UICulture.Name == "en-US")
{
    <style>
        #RenterLessorInformationSigntureImage {
            position: absolute;
            top: 39%;
            left: 50%;
        }
    </style>


}
else
{
    <style>
        #RenterLessorInformationSigntureImage {
            position: absolute;
            top: 39%;
            right: 50%;
        }
    </style>
}


<div class="sub-container-form" id="CAS">
            @if (requestCulture.RequestCulture.UICulture.Name == "ar-EG")
            {

            }

            else if (requestCulture.RequestCulture.UICulture.Name == "en-US")
            {


            }


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function validateInput(event, inId, InEr, No) {
            event.target.value = event.target.value.replace(/[^0-9]/g, '');

            const inputElement = document.getElementById(inId);
            const errorMessageElement = document.getElementById(InEr);

            const inputValue = inputElement.value;
            const isValid = inputValue.startsWith(No);

            if (!isValid) {
                errorMessageElement.textContent = errorMessageElement.getAttribute('data-error');
                inputElement.value = "";
            } else {
                errorMessageElement.textContent = '';
            }
        }
    </script>
    <script>
        function readURL(input, type) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    var container = $(input).closest('.file-upload');
                    container.find('.file-upload-image.' + type).attr('src', e.target.result);
                    container.find('.file-upload-content.' + type).show();
                    container.find('.image-title.' + type).html(input.files[0].name);
                    container.find('.image-upload-wrap').hide();
                };
                reader.readAsDataURL(input.files[0]);
            } else {
                removeUpload(input);
            }
        }

        function removeUpload(button) {
            var container = $(button).closest('.file-upload');
            var type = container.find('.file-upload-content').hasClass('signature') ? 'signature' : 'picture';
            container.find('.file-upload-input-' + type).val('');
            container.find('.file-upload-image.' + type).attr('src', '#');
            container.find('.file-upload-content.' + type).hide();
            container.find('.image-upload-wrap').show();
        }

        $('.image-upload-wrap').bind('dragover', function () {
            $(this).addClass('image-dropping');
        });
        $('.image-upload-wrap').bind('dragleave', function () {
            $(this).removeClass('image-dropping');
        });
    </script>
    <script>
        $(document).ready(function () {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetCities", "RenterLessorInformationes", new { Area = "CAS" })",
                success: function (response) {
                    console.log(response)
                    const newArray = response.map(obj => obj.text);
                    $("#cities").autocomplete({
                        source: newArray,
                    });

                },
            })

        });


    </script>

    <script>
        function updateUserStatus(status) {
            var RenterLessorInformationcode = document.getElementById("CrCasRenterLessorInformationInformationCode").value
            var LessorCode = document.getElementById("CrCasRenterLessorInformationInformationLessor").value
            $.ajax({
                type: "POST",
                url: "/CAS/RenterLessorInformationes/EditStatus",
                data: { status: status, RenterLessorInformationcode: RenterLessorInformationcode, lessorCode: LessorCode },
                success: function (result) {
                    $('.modal').modal('hide');
                    window.location.href = "/CAS/RenterLessorInformationes/RenterLessorInformationes";
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }

        // Event listener for delete user button
        $('#deleteUserButton').click(function () {
            updateUserStatus('D');
        });

        // Event listener for hold user button
        $('#holdUserButton').click(function () {
            updateUserStatus('H');
        });
        // Event listener for retrieve user button
        $('#retriveUserButtonD').click(function () {
            updateUserStatus('A');
        });
        $('#retriveUserButtonH').click(function () {
            updateUserStatus('A');
        });

        $("#buttonContainer a").on("click", function (event) {
            var status = $(this).attr("data-error")
            var Modal = $(this).attr("data-bs-targett")
            var branchCode = $("#CrCasRenterLessorInformationInformationCode").val();
            var salespoint = $("#SalesPointCount").val();
            var Balance = $("#CrCasRenterLessorInformationInformationTotalBalance").val();
            var CarsCount = $("#CarsCount").val();

            if (branchCode != "100") {
                if (status == "D") {
                    if (Balance > 0) {
                        toastr.options = { "positionClass": '@localizer["toastPostion"]', };
                        toastr.error('@localizer["toastMessagebranchHaveBalance"]');
                    }
                    else if (salespoint > 0) {
                        toastr.options = { "positionClass": '@localizer["toastPostion"]', };
                        toastr.error('@localizer["toastMessagebranchHaveSalesPoint"]');
                    }
                    else if (CarsCount > 0) {
                        toastr.options = { "positionClass": '@localizer["toastPostion"]', };
                        toastr.error('@localizer["toastMessagebranchHaveCars"]');
                    }
                    else {
                        CheckValidation('2201001', status).done(function (data) {
                            if (data) $(Modal).modal('show');
                        });
                    }
                }
                else {
                    CheckValidation('2201001', status).done(function (data) {
                        if (data) $(Modal).modal('show');
                    });
                }
            }
            else {
                if (status == "H") {
                    toastr.options = { "positionClass": '@localizer["toastPostion"]', };
                    toastr.error('@localizer["toastMessageMainRenterLessorInformationHold"]');
                }
                else {
                    toastr.options = { "positionClass": '@localizer["toastPostion"]', };
                    toastr.error('@localizer["toastMessageMainRenterLessorInformationDelete"]');
                }

            }

        })




    </script>
    <script>
        $(document).ready(function () {

            $("#saveEdit").on("click", function (event) {
                event.preventDefault();
                CheckValidation('2201001', '@Status.Save').done(function (data) {
                    if (data) {
                        $('form').submit();
                    }
                });
            })
        });
    </script>



    <script>
        var cultureInfo_ = '@System.Globalization.CultureInfo.CurrentCulture.Name'; // OK Done OK OK

        $('#DeleteButton').click(function () {
            let cc = '@ViewBag.RenterLessorInformations_Count';
            console.log(cc);
            console.log(cultureInfo_);
            if (cc != 0 && cc != '0') {
                if (cultureInfo_ == "en-US") {
                    console.log(cc);
                    toastr.options.timeOut = 7000; // 7s
                    toastr.options.positionClass = 'toast-top-right';
                    toastr.error("Sorry You Can't Delete this");
                }
                //else if (cultureInfo_ == "ar-EG") {
                else {
                    console.log(cc);
                    toastr.options.timeOut = 7000; // 7s
                    toastr.options.positionClass = 'toast-top-left';
                    toastr.error("للأسف لا تستطيع حذفه");
                }
            }
        });

    </script>
}



